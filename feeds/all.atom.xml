<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lizard-Spock</title><link href="http://lizard-spock.co.uk/pelican_test/" rel="alternate"></link><link href="http://lizard-spock.co.uk/pelican_test/feeds/all.atom.xml" rel="self"></link><id>http://lizard-spock.co.uk/pelican_test/</id><updated>2024-12-23T10:21:00+00:00</updated><entry><title>Python Regular Expressions</title><link href="http://lizard-spock.co.uk/pelican_test/python-regular-expressions.html" rel="alternate"></link><published>2024-12-23T10:21:00+00:00</published><updated>2024-12-23T10:21:00+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-12-23:/pelican_test/python-regular-expressions.html</id><summary type="html">&lt;h2&gt;Python Regular Expressions Quick Guide:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Matches&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;beginning&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Matches&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Matches&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;any&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;character …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;Python Regular Expressions Quick Guide:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Matches&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;beginning&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Matches&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Matches&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;any&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;character&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="n"&gt;Matches&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;whitespace&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="n"&gt;Matches&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;any&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;whitespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;character&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Repeats&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;character&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;more&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;times&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="n"&gt;Repeats&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;character&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;more&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;times&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;greedy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Repeats&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;character&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;more&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;times&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="n"&gt;Repeats&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;character&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;more&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;times&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;greedy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aeiou&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Matches&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;single&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;character&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;listed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;^XYZ&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;Matches&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;single&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;character&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;listed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a-z0-9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;characters&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;can&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Indicates&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;extraction&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Indicates&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;extraction&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Based on Dr Chucks from Python for Everyone course.&lt;/p&gt;
&lt;h2&gt;Usage:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="n"&gt;list_of_strings&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="python"></category></entry><entry><title>Adaptive Filter Theory Notes 1</title><link href="http://lizard-spock.co.uk/pelican_test/adaptive-filter-theory-notes-1.html" rel="alternate"></link><published>2024-12-19T11:04:00+00:00</published><updated>2024-12-19T11:04:00+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-12-19:/pelican_test/adaptive-filter-theory-notes-1.html</id><summary type="html">&lt;p&gt;Notes From Reading Adaptive Signal Theory (5th Ed) by Simon Haykin&lt;/p&gt;
&lt;h2&gt;Three Basic Kinds Of Estimation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Filtering  - Extraction of Current …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Notes From Reading Adaptive Signal Theory (5th Ed) by Simon Haykin&lt;/p&gt;
&lt;h2&gt;Three Basic Kinds Of Estimation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Filtering  - Extraction of Current and previous information. RealTime operation.&lt;/li&gt;
&lt;li&gt;Smoothing  - Data after the time of interest is used. Posteriori operation.&lt;/li&gt;
&lt;li&gt;Prediction - forcasting for some time in the future. RealTime operation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Filter optimization is useful to think of minimising the mean-square-error. &lt;/p&gt;
&lt;p&gt;For stationary inputs the &lt;strong&gt;Wiener&lt;/strong&gt; filter is considered optimal in mean-square-error sense.&lt;/p&gt;
&lt;p&gt;Plots of the mean-square value of the error signal versus the adjustable parameters of the linear filter is known as the &lt;strong&gt;error-performance-surface&lt;/strong&gt;. The min point on this is the Wiener solution.&lt;/p&gt;
&lt;p&gt;Wiener Filter is no good with moving signals, or precense of noise. Kalman Filters are useful in this sitation.&lt;/p&gt;</content><category term="Engineering"></category><category term="DSP"></category></entry><entry><title>Node Red vs Home Assistant</title><link href="http://lizard-spock.co.uk/pelican_test/node-red-vs-home-assistant.html" rel="alternate"></link><published>2024-10-24T15:58:00+01:00</published><updated>2024-10-24T15:58:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-10-24:/pelican_test/node-red-vs-home-assistant.html</id><summary type="html">&lt;p&gt;Node Red vs Home Assistant&lt;/p&gt;
&lt;p&gt;Which is better* ?&lt;/p&gt;
&lt;p&gt;*better: CPU/RAM efficient, easier to learn and or offer better support …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Node Red vs Home Assistant&lt;/p&gt;
&lt;p&gt;Which is better* ?&lt;/p&gt;
&lt;p&gt;*better: CPU/RAM efficient, easier to learn and or offer better support of devices&lt;/p&gt;
&lt;p&gt;Materials used for comparison &lt;a href="https://letsautomate.net/nodered/home-assistant-vs-node-red-which-is-the-better-choice/"&gt;video this review&lt;/a&gt;, end with the conclusion:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Home Assistant and Node-RED have their merits when it comes to automating your home. The choice ultimately depends on your preferences and specific requirements. While Home Assistant offers a user-friendly interface and integration within a single system, Node-RED provides versatility, the ability to connect to multiple Home Assistant instances and other APIs. Consider your needs, technical proficiency, and desired level of customization to determine which platform suits you best. Let us know your thoughts in the comments.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Tech"></category><category term="homeassistant"></category></entry><entry><title>Proxmox Plex Container</title><link href="http://lizard-spock.co.uk/pelican_test/proxmox-plex-container.html" rel="alternate"></link><published>2024-10-24T13:10:00+01:00</published><updated>2024-10-24T13:10:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-10-24:/pelican_test/proxmox-plex-container.html</id><summary type="html">&lt;p&gt;With Proxmox installed time to setup Plex in a container, and migrate from Synology NAS.&lt;/p&gt;
&lt;p&gt;I am following these guides …&lt;/p&gt;</summary><content type="html">&lt;p&gt;With Proxmox installed time to setup Plex in a container, and migrate from Synology NAS.&lt;/p&gt;
&lt;p&gt;I am following these guides for &lt;a href="https://www.derekseaman.com/2023/04/proxmox-plex-lxc-with-alder-lake-transcoding.html"&gt;plex setup&lt;/a&gt;, and there following guide for &lt;a href="https://www.derekseaman.com/2023/04/migration-guide-plex-on-synology-to-proxmox-lxc.html"&gt;synology to proxmox migration&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category><category term="proxmox"></category><category term="plex"></category></entry><entry><title>Starting with ProxMox</title><link href="http://lizard-spock.co.uk/pelican_test/starting-with-proxmox.html" rel="alternate"></link><published>2024-10-24T12:56:00+01:00</published><updated>2024-10-24T12:56:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-10-24:/pelican_test/starting-with-proxmox.html</id><summary type="html">&lt;p&gt;Having decided that &lt;a href="https://www.proxmox.com/en/"&gt;Proxmox&lt;/a&gt; is the way forward to manage docker and ivrtualisation outside of the synology NAS. i need …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Having decided that &lt;a href="https://www.proxmox.com/en/"&gt;Proxmox&lt;/a&gt; is the way forward to manage docker and ivrtualisation outside of the synology NAS. i need to figure out how to install , use and manage proxmox.&lt;/p&gt;
&lt;p&gt;For the first instance I will be following the &lt;a href="https://noted.lol/proxmox-for-beginners/"&gt;guide to Proxmox&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is another good tutorial &lt;a href="https://www.derekseaman.com/2023/10/home-assistant-proxmox-ve-8-0-quick-start-guide-2.html"&gt;here&lt;/a&gt; which covers installing proxmox and then creating a virtual machine for home assistant.&lt;/p&gt;
&lt;p&gt;Note from &lt;a href="https://pve.proxmox.com/pve-docs/chapter-pve-faq.html#:~:text=You%20manage%20a%20Docker%20instance,inside%20a%20Proxmox%20QEMU%20VM."&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;You&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;manage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Docker&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;instance&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;host&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Docker&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Engine&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;interface&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;It&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;recommended&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;docker&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;directly&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Proxmox&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;VE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;host&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;application&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;containers&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;example&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Docker&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;images&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;best&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;them&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;inside&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Proxmox&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;QEMU&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;VM&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="proxmox"></category></entry><entry><title>Beelink N200 Proxmox and Plex</title><link href="http://lizard-spock.co.uk/pelican_test/beelink-n200-proxmox-and-plex.html" rel="alternate"></link><published>2024-10-24T11:43:00+01:00</published><updated>2024-10-24T11:43:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-10-24:/pelican_test/beelink-n200-proxmox-and-plex.html</id><summary type="html">&lt;p&gt;To improve the Plex transcoding options and off load the computation from the NAS, the plan is purchase a BeeLink …&lt;/p&gt;</summary><content type="html">&lt;p&gt;To improve the Plex transcoding options and off load the computation from the NAS, the plan is purchase a BeeLink EQ13 Alder Lake N200 16GB Ram and 500GB Drive, currently for sale at £215.&lt;/p&gt;
&lt;p&gt;The Beelink will then have &lt;a href="https://www.proxmox.com/en/"&gt;proxmox&lt;/a&gt; installed as the main operating system. 
A docker container for Plex and the other dockers that are currently hosted on the NAS box.&lt;/p&gt;
&lt;p&gt;Theguide for plex install I will be following &lt;a href="https://forum.level1techs.com/t/plex-on-proxmox-with-igpu-hardware-transcode-best-practices/210491"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A virtual machine for Hssistant OS can also be installed to run &lt;a href="https://www.home-assistant.io/"&gt;HomeAssistant&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category><category term="Networking Plex Proxmox"></category></entry><entry><title>Cat8 T-568</title><link href="http://lizard-spock.co.uk/pelican_test/cat8-t-568.html" rel="alternate"></link><published>2024-10-21T13:31:00+01:00</published><updated>2024-10-21T13:31:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-10-21:/pelican_test/cat8-t-568.html</id><summary type="html">&lt;p&gt;Cat 8 Wiring, comes in 2 variants T-568A and T-568B.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Wiring Diagram" src="./images/Tech/T-568AB.png"&gt;&lt;/p&gt;
&lt;p&gt;Cat8 replaces the need for crimping tools with field termination …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cat 8 Wiring, comes in 2 variants T-568A and T-568B.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Wiring Diagram" src="./images/Tech/T-568AB.png"&gt;&lt;/p&gt;
&lt;p&gt;Cat8 replaces the need for crimping tools with field termination kits. Both ends need to wired the same otherwise there is no perfomance difference.&lt;/p&gt;</content><category term="Tech"></category><category term="ethernet"></category><category term="networking"></category></entry><entry><title>Synology Connecting Across VLAN with active VPN</title><link href="http://lizard-spock.co.uk/pelican_test/synology-connecting-across-vlan-with-active-vpn.html" rel="alternate"></link><published>2024-10-16T11:30:00+01:00</published><updated>2024-10-16T11:30:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-10-16:/pelican_test/synology-connecting-across-vlan-with-active-vpn.html</id><summary type="html">&lt;p&gt;When a Synology NAS creates a VPN connection it overides the default gateway, except for devices listed as contained within …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When a Synology NAS creates a VPN connection it overides the default gateway, except for devices listed as contained within its subnet. According to the &lt;a href="https://community.synology.com/enu/forum/1/post/138785"&gt;a post&lt;/a&gt; on the synology forum even if the subnet is changed to 255.255.0.0 it will not see devices on another VLAN. It feels like a subnet mask of 255.255.255.0 is hardcoded.&lt;/p&gt;
&lt;p&gt;For Allowing my Synology NAS to create a VPN connection and see device on my VLANS I had to add a &lt;em&gt;static route&lt;/em&gt; defining a gatweway for the VLAN IP/subnet.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;Network&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Destination&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;192&lt;/span&gt;.&lt;span class="mi"&gt;168&lt;/span&gt;.&lt;span class="mi"&gt;107&lt;/span&gt;.&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;VLAN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;107&lt;/span&gt;
&lt;span class="nv"&gt;Netmask&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;.&lt;span class="mi"&gt;255&lt;/span&gt;.&lt;span class="mi"&gt;255&lt;/span&gt;.&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Standard&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;netmask&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;VLAN&lt;/span&gt;
&lt;span class="nv"&gt;Gateway&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;192&lt;/span&gt;.&lt;span class="mi"&gt;168&lt;/span&gt;.&lt;span class="mi"&gt;100&lt;/span&gt;.&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Gateway&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Synology&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;NASs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;VLAN&lt;/span&gt;
&lt;span class="nv"&gt;Interface&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;physical&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;interface&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Synology&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;NAS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;uses&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;connect&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;VLAN&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="screen grab of route" src="/images/Tech/Synology_static_route.png"&gt;&lt;/p&gt;</content><category term="Tech"></category><category term="Synology"></category><category term="networking"></category><category term="VLAN"></category><category term="VPN"></category></entry><entry><title>TeX hyphenation</title><link href="http://lizard-spock.co.uk/pelican_test/tex-hyphenation.html" rel="alternate"></link><published>2024-10-14T14:45:00+01:00</published><updated>2024-10-14T14:45:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-10-14:/pelican_test/tex-hyphenation.html</id><summary type="html">&lt;p&gt;When TeX/LaTeX is fully justifying text there are times when it could do better but it does not know …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When TeX/LaTeX is fully justifying text there are times when it could do better but it does not know how to hyphenate certain words. Here we can give it guidnace on how to split words.&lt;/p&gt;
&lt;p&gt;For example (insert into the pre-amble):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\hyphenation{acro-nym}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Multiple hyphenation points can also be defined, and for related words:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\hyphenation{ac-ro-nym ac-ro-nym-ic a-cro-nym-i-cal-ly}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The hyphenation point can be inserted manually with a &lt;code&gt;\-&lt;/code&gt;, but it is best to setup in the pre-amble and keep all the layout rules together.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;acro\-nym
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Preventing Hyphenation&lt;/h2&gt;
&lt;p&gt;Preventing hyphenation can be done by decalring in the pre-amble without a hyphen or inline with an &lt;code&gt;\mbox&lt;/code&gt; command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\hyphenation{automobile}

this will stop hyphenation of inline text \mbox{automobile}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Global Hyphenation Control&lt;/h2&gt;
&lt;p&gt;Use the hphenat package to prevent all hyphenation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;usepackage&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;hyphenat&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There are some better ideas on this &lt;a href="https://tex.stackexchange.com/q/5036/165015"&gt;TeX SO Question&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category><category term="TeX"></category></entry><entry><title>TeX Paragraph Box</title><link href="http://lizard-spock.co.uk/pelican_test/tex-paragraph-box.html" rel="alternate"></link><published>2024-10-11T14:18:00+01:00</published><updated>2024-10-11T14:18:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-10-11:/pelican_test/tex-paragraph-box.html</id><summary type="html">&lt;p&gt;&lt;code&gt;parbox&lt;/code&gt; is a LaTeX command used to place a box around text. &lt;/p&gt;
&lt;p&gt;Remeber that optional arguments are in [] (Square brackets …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;parbox&lt;/code&gt; is a LaTeX command used to place a box around text. &lt;/p&gt;
&lt;p&gt;Remeber that optional arguments are in [] (Square brackets)&lt;/p&gt;
&lt;p&gt;Typical usage is :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;parbox&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="err"&gt;}{&lt;/span&gt;&lt;span class="nc"&gt;text&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The options are:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Top&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;alligned&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vertically&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;centered&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Bottom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;alligned&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Stretch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vertically&lt;/span&gt;

&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fractional&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;followed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ISO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;units&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mm&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;are&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;supported&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;article&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;\parbox&lt;/span&gt;&lt;span class="na"&gt;[b]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;2.3cm&lt;span class="nb"&gt;}{&lt;/span&gt;b for bottom aligned&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If a large amount of text is to be placed in the box &lt;code&gt;minipage&lt;/code&gt; is preffered over &lt;code&gt;parbox&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;article&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;minipage&lt;span class="nb"&gt;}{&lt;/span&gt;2.3cm&lt;span class="nb"&gt;}&lt;/span&gt;
    minipage not parbox
  &lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;minipage&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;minipage&lt;/code&gt; supports all the arguments of &lt;code&gt;\parbox&lt;/code&gt;, as well as &lt;code&gt;\footnote&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;article&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;minipage&lt;span class="nb"&gt;}{&lt;/span&gt;5cm&lt;span class="nb"&gt;}&lt;/span&gt;
    minipage not parbox &lt;span class="k"&gt;\footnote&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;this is a foot note&lt;span class="nb"&gt;}&lt;/span&gt;.
    Second Line with another foot note &lt;span class="k"&gt;\footnote&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;Another foot note&lt;span class="nb"&gt;}&lt;/span&gt;.
  &lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;minipage&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/images/Tech/Tex/tex_minipage_footnote.png"&gt;&lt;/p&gt;</content><category term="Tech"></category><category term="TeX"></category></entry><entry><title>LaTeX macros</title><link href="http://lizard-spock.co.uk/pelican_test/latex-macros.html" rel="alternate"></link><published>2024-10-10T14:17:00+01:00</published><updated>2024-10-10T14:17:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-10-10:/pelican_test/latex-macros.html</id><summary type="html">&lt;p&gt;LaTeX macros can be used as simple text replacments for example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;article&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\newcommand&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\LUG&lt;/span&gt;&lt;span class="nb"&gt;}{&lt;/span&gt;LEGO User Group&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;LaTeX macros can be used as simple text replacments for example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;article&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\newcommand&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\LUG&lt;/span&gt;&lt;span class="nb"&gt;}{&lt;/span&gt;LEGO User Group&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;\section&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;Welcome to the &lt;span class="k"&gt;\LUG&lt;/span&gt;&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;More Advanced usage allows LaTeX macros to be used like functions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;article&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\newcommand&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\LUG&lt;/span&gt;&lt;span class="nb"&gt;}&lt;/span&gt;[1]&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\textbf&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;#1&lt;span class="nb"&gt;}&lt;/span&gt; LEGO User Group&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;\section&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;Welcome to the &lt;span class="k"&gt;\LUG&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;tartan&lt;span class="nb"&gt;}}&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="TeX"></category></entry><entry><title>Tools for Technical Writing</title><link href="http://lizard-spock.co.uk/pelican_test/tools-for-technical-writing.html" rel="alternate"></link><published>2024-09-10T10:17:00+01:00</published><updated>2024-09-10T10:17:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-09-10:/pelican_test/tools-for-technical-writing.html</id><summary type="html">&lt;p&gt;WYSIWYG editor for LaTeX &lt;a href="https://www.lyx.org/"&gt;lyx&lt;/a&gt;, and a manager for Bibliography &lt;a href="https://www.jabref.org/"&gt;JabRef&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lyx Tutorial: &lt;a href="https://wiki.lyx.org/Mac/Mac"&gt;Lyx mac Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JabRef Tutorial: &lt;a href="https://docs.jabref.org/getting-started"&gt;Getting Started …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;WYSIWYG editor for LaTeX &lt;a href="https://www.lyx.org/"&gt;lyx&lt;/a&gt;, and a manager for Bibliography &lt;a href="https://www.jabref.org/"&gt;JabRef&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lyx Tutorial: &lt;a href="https://wiki.lyx.org/Mac/Mac"&gt;Lyx mac Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JabRef Tutorial: &lt;a href="https://docs.jabref.org/getting-started"&gt;Getting Started&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tools avialable via home brew:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew install lyx
brew install jabref
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="TeX"></category></entry><entry><title>Bike Chain Cleaning</title><link href="http://lizard-spock.co.uk/pelican_test/bike-chain-cleaning.html" rel="alternate"></link><published>2024-06-14T12:27:00+01:00</published><updated>2024-06-14T12:27:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-06-14:/pelican_test/bike-chain-cleaning.html</id><summary type="html">&lt;p&gt;Chain Cleaning method:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; Clean the chain with WD40 (water dispersant).
 Wipe dry with kitchen roll. 
 Spray with Comma White Grease …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Chain Cleaning method:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; Clean the chain with WD40 (water dispersant).
 Wipe dry with kitchen roll. 
 Spray with Comma White Grease and wipe clean again.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The chain should be lubricated on the moving parts of the chain, not the surface in contact with cogs.&lt;/p&gt;</content><category term="Outdoor"></category><category term="outdoors"></category><category term="bike"></category></entry><entry><title>Pyhton_virtual_env</title><link href="http://lizard-spock.co.uk/pelican_test/pyhton_virtual_env.html" rel="alternate"></link><published>2024-05-30T16:03:00+01:00</published><updated>2024-05-30T16:03:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-05-30:/pelican_test/pyhton_virtual_env.html</id><summary type="html">&lt;p&gt;Creating/Setup a pyhton virtual enviroment called 'venv'&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m venv venv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Load the virtual env called venv&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;source venv …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Creating/Setup a pyhton virtual enviroment called 'venv'&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m venv venv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Load the virtual env called venv&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;source venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://realpython.com/python-virtual-environments-a-primer/"&gt;RealPython Guide&lt;/a&gt;, &lt;a href="https://docs.python.org/3/library/venv.html"&gt;Docs&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Convolution in Python</title><link href="http://lizard-spock.co.uk/pelican_test/convolution-in-python.html" rel="alternate"></link><published>2024-05-03T14:25:00+01:00</published><updated>2024-05-03T14:25:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-05-03:/pelican_test/convolution-in-python.html</id><summary type="html">&lt;p&gt;Convolution in Python, for merging filter responses, creating pascals triangle ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;numpy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;b …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Convolution in Python, for merging filter responses, creating pascals triangle ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;numpy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category></entry><entry><title>Perforce Update files in a Shelve</title><link href="http://lizard-spock.co.uk/pelican_test/perforce-update-files-in-a-shelve.html" rel="alternate"></link><published>2024-04-30T11:04:00+01:00</published><updated>2024-04-30T11:04:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-04-30:/pelican_test/perforce-update-files-in-a-shelve.html</id><summary type="html">&lt;p&gt;Perforce can temporarily checkins of changes that you might want to share with others before fully commiting them to the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Perforce can temporarily checkins of changes that you might want to share with others before fully commiting them to the code base. These P4 Shelves have some properties that seem undesirable for a revision control system. They are not imuttable. &lt;/p&gt;
&lt;p&gt;From there nature they are temporary but they can also be altered and maintain the same changelist number. Solution based on &lt;a href="https://stackoverflow.com/a/23109698/97073"&gt;this SO answer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lets create file a.txt with some default content, and create a shelve.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;File a - line 1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;.&lt;span class="nv"&gt;txt&lt;/span&gt;
&lt;span class="nv"&gt;p4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;.&lt;span class="nv"&gt;txt&lt;/span&gt;
&lt;span class="nv"&gt;p4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;shelve&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;...

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Change&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3265397&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;created&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;open&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Shelving&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;files&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;change&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3265397&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Remeber the Changelist number for the shelve, we will refer to it as \&amp;lt;change#&amp;gt;. 
Now lets modify a and create a b.txt. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;p4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;edit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;.&lt;span class="nv"&gt;txt&lt;/span&gt;
&lt;span class="nv"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;File a - line 2 after intial shelve&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;.&lt;span class="nv"&gt;txt&lt;/span&gt;
&lt;span class="nv"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;File b - line 1 Missed in first shelve&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;b&lt;/span&gt;.&lt;span class="nv"&gt;txt&lt;/span&gt;
&lt;span class="nv"&gt;p4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;b&lt;/span&gt;.&lt;span class="nv"&gt;txt&lt;/span&gt;

&lt;span class="nv"&gt;p4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;reopen&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;change&lt;/span&gt;#&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;b&lt;/span&gt;.&lt;span class="nv"&gt;txt&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;b&lt;/span&gt;.&lt;span class="nv"&gt;txt&lt;/span&gt;&lt;span class="sc"&gt;#1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;reopened&lt;/span&gt;&lt;span class="c1"&gt;; change 3265397&lt;/span&gt;

&lt;span class="nv"&gt;p4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;shelve&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;change&lt;/span&gt;#&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Shelving&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;files&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;change&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3265397&lt;/span&gt;.
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;.&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;.&lt;span class="nv"&gt;txt&lt;/span&gt;&lt;span class="sc"&gt;#1&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;.&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;b&lt;/span&gt;.&lt;span class="nv"&gt;txt&lt;/span&gt;&lt;span class="sc"&gt;#1&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Change&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3265397&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;files&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;shelved&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category></entry><entry><title>Python merge PDFs</title><link href="http://lizard-spock.co.uk/pelican_test/python-merge-pdfs.html" rel="alternate"></link><published>2024-04-22T18:49:00+01:00</published><updated>2024-04-22T18:49:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-04-22:/pelican_test/python-merge-pdfs.html</id><summary type="html">&lt;p&gt;Using python script to merge pdfs together.&lt;/p&gt;
&lt;p&gt;Install package&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install pypdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;pypdf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PdfWriter&lt;/span&gt;

&lt;span class="n"&gt;pdfs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;file1.pdf …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Using python script to merge pdfs together.&lt;/p&gt;
&lt;p&gt;Install package&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install pypdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;pypdf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PdfWriter&lt;/span&gt;

&lt;span class="n"&gt;pdfs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;file1.pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;file2.pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;file3.pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;file4.pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#merger = PdfMerger()&lt;/span&gt;
&lt;span class="n"&gt;merger&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PdfWriter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pdfs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;merger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;merger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;result.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;merger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/3444645/merge-pdf-files"&gt;source&lt;/a&gt;&lt;/p&gt;</content><category term="Tech"></category><category term="python"></category></entry><entry><title>Pythonista pip install pelican</title><link href="http://lizard-spock.co.uk/pelican_test/pythonista-pip-install-pelican.html" rel="alternate"></link><published>2024-04-20T12:04:00+01:00</published><updated>2024-04-20T12:04:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-04-20:/pelican_test/pythonista-pip-install-pelican.html</id><summary type="html">&lt;p&gt;On the journey towards publish static site generator blog posts from iPadOS, my next step after installing stash on pythonista …&lt;/p&gt;</summary><content type="html">&lt;p&gt;On the journey towards publish static site generator blog posts from iPadOS, my next step after installing stash on pythonista is uisng pip to install the pelican library.&lt;/p&gt;</content><category term="Tech"></category><category term="python"></category></entry><entry><title>Pythonista using stash for pip</title><link href="http://lizard-spock.co.uk/pelican_test/pythonista-using-stash-for-pip.html" rel="alternate"></link><published>2024-04-19T17:04:00+01:00</published><updated>2024-04-19T17:04:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-04-19:/pelican_test/pythonista-using-stash-for-pip.html</id><summary type="html">&lt;p&gt;Installing stash on pythonista&lt;/p&gt;</summary><content type="html">&lt;p&gt;To run pip in pythonista we need to install &lt;a href="https://github.com/ywangd/stash"&gt;stash&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;See stash page sfor latest details, at time of install I had to run this from the pythinista terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;requests&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;r&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://bit.ly/get-stash&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="installing stash" src="img/install_stash.png" title="Installing Stash"&gt;&lt;/p&gt;
&lt;p&gt;Then to start stash from a new (restart pyhtonista app) find and run the launch_stash.py script&lt;/p&gt;
&lt;p&gt;&lt;img alt="start stash" src="img/launch_stash.png" title="Starting Stash"&gt;&lt;/p&gt;
&lt;p&gt;there will then be a second terminal with the stash command line open up&lt;/p&gt;
&lt;p&gt;&lt;img alt="running stash" src="img/running_stash.png" title="Running Stash"&gt;&lt;/p&gt;</content><category term="Tech"></category><category term="python"></category></entry><entry><title>Python read a CSV file</title><link href="http://lizard-spock.co.uk/pelican_test/python-read-a-csv-file.html" rel="alternate"></link><published>2024-04-19T12:34:00+01:00</published><updated>2024-04-19T12:34:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-04-19:/pelican_test/python-read-a-csv-file.html</id><summary type="html">&lt;p&gt;Python example for reading data from a csv file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, newline=&amp;#39;&amp;#39;) as csvfile:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;spamreader&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;csv …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Python example for reading data from a csv file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, newline=&amp;#39;&amp;#39;) as csvfile:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;spamreader&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csvfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;delimiter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;quotechar&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;|&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spamreader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Import csv into a numpy array.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;numpy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# data_array = np.array(data)  # Conversion for strings&lt;/span&gt;
&lt;span class="n"&gt;data_array&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# Conversion for doubles&lt;/span&gt;

&lt;span class="c1"&gt;# Print first 10 data elements.&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;data_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Outputs: &lt;/p&gt;
&lt;p&gt;&lt;a href="https://saturncloud.io/blog/loading-csv-data-into-a-numpy-array-a-comprehensive-guide/"&gt;source&lt;/a&gt;&lt;/p&gt;</content><category term="Tech"></category><category term="pelican"></category><category term="python"></category></entry><entry><title>Python Sinewave</title><link href="http://lizard-spock.co.uk/pelican_test/python-sinewave.html" rel="alternate"></link><published>2024-04-19T12:34:00+01:00</published><updated>2024-04-19T12:34:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2024-04-19:/pelican_test/python-sinewave.html</id><summary type="html">&lt;p&gt;Create and plot a sinewave in python&lt;/p&gt;</summary><content type="html">&lt;p&gt;Python example for creatign and plotting a sinewave:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# coding: utf-8&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;numpy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;48000&lt;/span&gt;
&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#Hz&lt;/span&gt;
&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# Linear Amplitude&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# Seconds sample length&lt;/span&gt;

&lt;span class="n"&gt;amp_db&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log10&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sine_&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;Hz_&lt;/span&gt;&lt;span class="si"&gt;%4.2f&lt;/span&gt;&lt;span class="s1"&gt;_amp&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;amp_db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;label_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Sinewave &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;Hz &lt;/span&gt;&lt;span class="si"&gt;%5.2f&lt;/span&gt;&lt;span class="s2"&gt;dB&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;amp_db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#samples = np.linspace(0, t, int(fs*t), endpoint=False)&lt;/span&gt;
&lt;span class="n"&gt;samples&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;

&lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;samples&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;label_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Sinewave&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;savefig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Generates and saves this plot&lt;/p&gt;
&lt;p&gt;&lt;img alt="1kHz Sinewave" src="img/sine_1000Hz_0.00_amp.png" title="Generate Sinewave Plot"&gt;&lt;/p&gt;
&lt;p&gt;To export the 'signal' data as a CSV file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;newline&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;csvfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;f_writer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csvfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;delimiter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;quotechar&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;|&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;quoting&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QUOTE_MINIMAL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;f_writer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writerows&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;*.csv output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;
&lt;span class="mf"&gt;0.13052619222005157&lt;/span&gt;
&lt;span class="mf"&gt;0.25881904510252074&lt;/span&gt;
&lt;span class="mf"&gt;0.3826834323650898&lt;/span&gt;
&lt;span class="mf"&gt;0.49999999999999994&lt;/span&gt;
&lt;span class="mf"&gt;0.6087614290087207&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="python"></category><category term="signal"></category><category term="DSP"></category></entry><entry><title>"Home Directory File Structure"</title><link href="http://lizard-spock.co.uk/pelican_test/home-directory-file-structure.html" rel="alternate"></link><published>2015-10-22T10:32:44+01:00</published><updated>2015-10-22T10:32:44+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-10-22:/pelican_test/home-directory-file-structure.html</id><summary type="html">&lt;p&gt;Apples default directory structure is :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Downloads&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Library&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;# Hidden by default&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Movies&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Music&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pictures&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Public&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;My current …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Apples default directory structure is :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Downloads&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Library&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;# Hidden by default&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Movies&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Music&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pictures&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Public&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;My current setup After adding Dropbox, dotfiles stored on github, Code, and user level applications folder:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Applications&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Code&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Downloads&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Library&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Movies&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Music&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pictures&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Public&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dotfiles&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;At present though my Dropbox is a mess of some documents, some code and lots of ebooks. Free Dropbox does not have enough space for me to the entire home directory. Considering a BtSync pro account which allows selective sync. BtSync will allow me to set the root as my home directory and select which folders from that to sync. &lt;/p&gt;
&lt;p&gt;I have started using USB flash drives again, and have found &lt;a href="http://www.cis.upenn.edu/~bcpierce/unison"&gt;unison&lt;/a&gt; to be a useful tool for syncing local drives to each other.&lt;/p&gt;
&lt;p&gt;Me example unison sync (USB drive is called 'Dropbox'):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;unison&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;Volumes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;Dropbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;Unison&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;fat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;links&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;true&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Code&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;\
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Documents&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Dropbox&lt;/span&gt;

#&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;fat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Work&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;With&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;FAT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;filesystem&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ThumbDrive&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
#&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Accept&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;action&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;merges&lt;/span&gt;
#&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;links&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;true&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;follow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;symlinks&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that the 'Dropbox' root is my home directory I can reorganise. Books should become a top level folder, and share a place along side Music and Movies.&lt;/p&gt;
&lt;p&gt;Dropbox is kept but mainly used for sharing temporary files with others.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Applications&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Books&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Code&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Downloads&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Library&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Movies&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Music&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pictures&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Public&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dotfiles&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dropbox: sending large files
BT Sync: Synchronising files (eBook collection)
Unison: Synchronising local drives (Thumbdrive to local documents/ebooks)
ReadyNAS: Remote access to larger volume drives (Movies and TV Collections)
 Above could be a BT Sync non populated folder  &lt;/p&gt;</content><category term="Tech"></category><category term="Filesystem"></category><category term="Organised"></category></entry><entry><title>"JapaneseGarden"</title><link href="http://lizard-spock.co.uk/pelican_test/japanesegarden.html" rel="alternate"></link><published>2015-10-10T12:50:55+01:00</published><updated>2015-10-10T12:50:55+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-10-10:/pelican_test/japanesegarden.html</id><content type="html">&lt;p&gt;First step creating the retaining wall, to become a raised bed.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Gardening/JapaneseGarden/morganp-20140616--_MG_9132.jpg"&gt;
&lt;img alt="" src="/images/Gardening/JapaneseGarden/morganp-20141025-Garden-IMG_9608.jpg"&gt;
&lt;img alt="" src="/images/Gardening/JapaneseGarden/morganp-20150306--IMG_0145.jpg"&gt;
&lt;img alt="" src="/images/Gardening/JapaneseGarden/morganp-20150306--IMG_0149.jpg"&gt;
&lt;img alt="" src="/images/Gardening/JapaneseGarden/morganp-20150309--IMG_0158.jpg"&gt;
&lt;img alt="" src="/images/Gardening/JapaneseGarden/morganp-20150420--IMG_0417.jpg"&gt;
&lt;img alt="" src="/images/Gardening/JapaneseGarden/morganp-20150420--IMG_0418.jpg"&gt;
&lt;img alt="" src="/images/Gardening/JapaneseGarden/morganp-20150420--IMG_0419.jpg"&gt;&lt;/p&gt;</content><category term="Home"></category><category term="DIY"></category><category term="Garden"></category></entry><entry><title>"Potting Bench"</title><link href="http://lizard-spock.co.uk/pelican_test/potting-bench.html" rel="alternate"></link><published>2015-10-10T12:23:15+01:00</published><updated>2015-10-10T12:23:15+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-10-10:/pelican_test/potting-bench.html</id><summary type="html">&lt;p&gt;Homemade potting bench, using 15 2.4M Fence boards (£45).&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Gardening/PottingBench/morganp-20150414--IMG_0330.jpg"&gt;
&lt;img alt="" src="/images/Gardening/PottingBench/morganp-20150414--IMG_0332.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Note for ease of building the height was 1.2M …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Homemade potting bench, using 15 2.4M Fence boards (£45).&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Gardening/PottingBench/morganp-20150414--IMG_0330.jpg"&gt;
&lt;img alt="" src="/images/Gardening/PottingBench/morganp-20150414--IMG_0332.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Note for ease of building the height was 1.2M, half a 2.4 meter board, this is too high.&lt;/p&gt;</content><category term="Home"></category><category term="DIY"></category><category term="Garden"></category></entry><entry><title>"Self Watering Propagator"</title><link href="http://lizard-spock.co.uk/pelican_test/self-watering-propagator.html" rel="alternate"></link><published>2015-10-10T12:04:12+01:00</published><updated>2015-10-10T12:04:12+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-10-10:/pelican_test/self-watering-propagator.html</id><content type="html">&lt;p&gt;Propagator hack using some seed trays and capillary matting.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Gardening/Propogator/morganp-20150328--IMG_0176.jpg"&gt;
&lt;img alt="" src="/images/Gardening/Propogator/morganp-20150328--IMG_0178.jpg"&gt;
&lt;img alt="" src="/images/Gardening/Propogator/morganp-20150328--IMG_0179.jpg"&gt;
&lt;img alt="" src="/images/Gardening/Propogator/morganp-20150328--IMG_0180.jpg"&gt;&lt;/p&gt;</content><category term="Home"></category><category term="DIY"></category><category term="Garden"></category></entry><entry><title>"Planter"</title><link href="http://lizard-spock.co.uk/pelican_test/planter.html" rel="alternate"></link><published>2015-10-10T10:52:30+01:00</published><updated>2015-10-10T10:52:30+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-10-10:/pelican_test/planter.html</id><content type="html">&lt;p&gt;3 Fence boards used to create planter.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Gardening/Planter/morganp-20150504-Planter-IMG_0543.jpg"&gt;&lt;/p&gt;</content><category term="Home"></category><category term="DIY"></category><category term="Garden"></category></entry><entry><title>"Matlab: floating point checking equality"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-floating-point-checking-equality.html" rel="alternate"></link><published>2015-06-10T20:43:32+01:00</published><updated>2015-06-10T20:43:32+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-06-10:/pelican_test/matlab-floating-point-checking-equality.html</id><summary type="html">&lt;p&gt;As previously decribed &lt;a href="/blog/engineering/floating-point-arithmetic-is-not-associative/"&gt;floating point arithmetic is not associative&lt;/a&gt;. Which means it is very easy for floating point models not …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As previously decribed &lt;a href="/blog/engineering/floating-point-arithmetic-is-not-associative/"&gt;floating point arithmetic is not associative&lt;/a&gt;. Which means it is very easy for floating point models not to match even though they are performing the same arithmetic operations. In matlab we compare the results:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a = 0.1 + 0.2 + 0.3 ;
b = 0.1 + (0.2 + 0.3);

isequal(a, b)
&amp;gt; 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;a &amp;amp; b are not equal, they are a least significant bit out, when comparing floating point numbers it is common to allow this amount of tolerance. Matlab anonymous functions can be used to create a new &lt;code&gt;isequal&lt;/code&gt; function which takes a tolerance value. Idea from &lt;a href="http://stackoverflow.com/questions/2202641/how-do-i-compare-all-elements-of-two-arrays"&gt;Stackoverflow&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;isequalAbs = @(x,y,tol) ( all(abs(x-y) &amp;lt;= tol ));
floating_point_tol = 1e-15;

isequalAbs(a, b, floating_point_tol)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Maths"></category><category term="Matlab"></category></entry><entry><title>"Matlab: linear progressions"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-linear-progressions.html" rel="alternate"></link><published>2015-06-10T20:19:05+01:00</published><updated>2015-06-10T20:19:05+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-06-10:/pelican_test/matlab-linear-progressions.html</id><summary type="html">&lt;p&gt;Progressions can be created using the &lt;a href="http://uk.mathworks.com/help/matlab/ref/colon.html"&gt;Colon&lt;/a&gt; operator&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;min   = 10
max   = 100
steps = 20

step_size = (max-min)/steps

i = min:step_size …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Progressions can be created using the &lt;a href="http://uk.mathworks.com/help/matlab/ref/colon.html"&gt;Colon&lt;/a&gt; operator&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;min   = 10
max   = 100
steps = 20

step_size = (max-min)/steps

i = min:step_size:max
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Alternatively &lt;a href="http://uk.mathworks.com/help/matlab/ref/linspace.html"&gt;linspace&lt;/a&gt; can be used:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;min   = 10
max   = 100
steps = 20

i = linspace(min,max,steps)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This also allows for easily switching to a log scale using &lt;a href="http://uk.mathworks.com/help/matlab/ref/logspace.html"&gt;logspace&lt;/a&gt;.&lt;/p&gt;</content><category term="Engineering"></category><category term="Matlab"></category></entry><entry><title>"Matlab: functions inputs parsed based on outputs"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-functions-inputs-parsed-based-on-outputs.html" rel="alternate"></link><published>2015-06-10T20:10:54+01:00</published><updated>2015-06-10T20:10:54+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-06-10:/pelican_test/matlab-functions-inputs-parsed-based-on-outputs.html</id><summary type="html">&lt;p&gt;It is quite common to detect how many input arguments have been passed to a function, using &lt;code&gt;nargin&lt;/code&gt; (N arguments …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It is quite common to detect how many input arguments have been passed to a function, using &lt;code&gt;nargin&lt;/code&gt; (N arguments in).  Commonly used to set defaults for arguments not specified.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;result&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;fun_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;a,b,c&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;nargin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;a must be supplied&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;nargin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;nargin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;% ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However I just discovered &lt;code&gt;nargout&lt;/code&gt; (N arguments out(.&lt;/p&gt;
&lt;p&gt;This allows the scripts to differentiate between:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;x     = fun(a)
[x,y] = fun(a)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Example 1:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;[ varargout ] = nargout_test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; input_args &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;disp&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;nargout : &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;num2str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;nargout&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c"&gt;% Set outputs&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;nargout&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;varargout&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Example 2, changing input args usage based on number of outputs:
note the input keyword change to the input arguments &lt;code&gt;varargin&lt;/code&gt; Variable argument in.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;[ varargout ] = nargout_test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; varargin &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;disp&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;nargin : &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;num2str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;nargin&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;disp&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;nargout : &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;num2str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;nargout&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;nargout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Too many output arguments&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;nargout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c"&gt;% single output first input means something&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;varargout&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;varargin&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;nargout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c"&gt;% two outputs first input means some thing else&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;varargout&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;varargin&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;varargin&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;varargout&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;varargin&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;varargin&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A good example is the &lt;a href="http://uk.mathworks.com/matlabcentral/fileexchange/13792-the-dc-blocking-filter/"&gt;dcblock script by J M De Freitas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Which has this syntax:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SYNTAX&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dcblock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Fc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dcblock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aQ&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dcblock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fc,fc&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dcblock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="n"&gt;dcblock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Fc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="n"&gt;dcblock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="n"&gt;dcblock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Matlab"></category></entry><entry><title>"SystemVerilog: RTL Types"</title><link href="http://lizard-spock.co.uk/pelican_test/systemverilog-rtl-types.html" rel="alternate"></link><published>2015-03-26T20:08:34+00:00</published><updated>2015-03-26T20:08:34+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-03-26:/pelican_test/systemverilog-rtl-types.html</id><summary type="html">&lt;p&gt;&lt;code&gt;reg&lt;/code&gt; and &lt;code&gt;wire&lt;/code&gt; were the original synthesisable types. Wires are constantly assigned and regs are evaluated at particular points, the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;reg&lt;/code&gt; and &lt;code&gt;wire&lt;/code&gt; were the original synthesisable types. Wires are constantly assigned and regs are evaluated at particular points, the advantage here is for the simulator to make optimisations.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;wire&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;w_data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;assign&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;w_data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Same function as above using reg&lt;/span&gt;
&lt;span class="kt"&gt;reg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r_data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;always&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;r_data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A common mistake when learning Verilog is to assume the reg type implies a register in hardware. The earlier optimisation for the simulator can be done through the context of its usage.&lt;/p&gt;
&lt;p&gt;This introduces &lt;code&gt;logic&lt;/code&gt; which can be used in place of wire and reg.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;logic&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;w_data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;assign&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;w_data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Same function as above using reg&lt;/span&gt;
&lt;span class="kt"&gt;logic&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r_data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;always&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;r_data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The type &lt;code&gt;bit&lt;/code&gt; and &lt;code&gt;byte&lt;/code&gt; have also been created that can only hold 2 states 0 or 1 no x or z. &lt;code&gt;byte&lt;/code&gt; implies &lt;code&gt;bit [7:0]&lt;/code&gt;. Using these types offers a small speed improvement but I would recommend not using them in RTL as your verification may miss uninitialized values or critical resets.&lt;/p&gt;
&lt;p&gt;The usage of &lt;code&gt;bit&lt;/code&gt; and &lt;code&gt;byte&lt;/code&gt; would be more common in testbench components, but can lead to issues in case of having to drive x's to stimulate data corruption and recovery.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;At the time of writing I was under the impression that &lt;code&gt;logic&lt;/code&gt; could not be used for tristate, I am unable to find the original paper that I based this on. Until further updates, comments or edits, I revoke my assertion that &lt;em&gt;logic can not be used to create tri-state lines&lt;/em&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The &lt;code&gt;tri&lt;/code&gt; type has been added, for explicitly defining a tri-state line. It is based on the properties of a &lt;code&gt;wire&lt;/code&gt;, &lt;code&gt;logic&lt;/code&gt; is based on the properties of a &lt;code&gt;reg&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;tri&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t_data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;assign&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t_data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;drive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;1&lt;/span&gt;&lt;span class="p"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;bz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you no longer have to support backwards compatibility Verilog then I would recommend switching to using &lt;code&gt;logic&lt;/code&gt; and &lt;code&gt;tri&lt;/code&gt;. Using &lt;code&gt;logic&lt;/code&gt; aids re-factoring and and &lt;code&gt;tri&lt;/code&gt;  reflects the design intent of a tristate line.&lt;/p&gt;
&lt;p&gt;Originally posted as a&lt;a href="http://stackoverflow.com/a/13285242/97073"&gt; SO answer&lt;/a&gt;.&lt;/p&gt;</content><category term="Engineering"></category><category term="Verilog"></category><category term="Programming"></category></entry><entry><title>"Verilog: define if not defined"</title><link href="http://lizard-spock.co.uk/pelican_test/verilog-define-if-not-defined.html" rel="alternate"></link><published>2015-03-26T19:45:10+00:00</published><updated>2015-03-26T19:45:10+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-03-26:/pelican_test/verilog-define-if-not-defined.html</id><summary type="html">&lt;p&gt;To set a default define option while allowing it to be overridden from the command line.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sb"&gt;`ifndef mode_sel&lt;/span&gt;
&lt;span class="sb"&gt;  `&lt;/span&gt;define mode_sel …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;To set a default define option while allowing it to be overridden from the command line.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sb"&gt;`ifndef mode_sel&lt;/span&gt;
&lt;span class="sb"&gt;  `&lt;/span&gt;define mode_sel 0
`endif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The command line should override testbench defined options but this has proven unreliable.&lt;/p&gt;
&lt;p&gt;command line to set value:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;irun -define mode_sel=1 ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Verilog"></category></entry><entry><title>"Verilog: shm waveforms"</title><link href="http://lizard-spock.co.uk/pelican_test/verilog-shm-waveforms.html" rel="alternate"></link><published>2015-03-26T19:38:29+00:00</published><updated>2015-03-26T19:38:29+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-03-26:/pelican_test/verilog-shm-waveforms.html</id><summary type="html">&lt;p&gt;The best practice is to use a tcl file:&lt;/p&gt;
&lt;p&gt;shm.tcl &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;database -open waves -shm
probe -create your_top_level -depth all …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;The best practice is to use a tcl file:&lt;/p&gt;
&lt;p&gt;shm.tcl &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;database -open waves -shm
probe -create your_top_level -depth all -all -shm -database waves
run 
exit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;run with :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;irun -access +r testcase.sv -input shm.tcl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Alternatively the following can be added to the simulation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;initial begin
  $shm_open(&amp;quot;waves.shm&amp;quot;); $shm_probe(&amp;quot;AS&amp;quot;);
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;run with &lt;code&gt;irun -access +r testcase.sv&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;NB: I have had trouble getting this last version to work, the tcl file method is more reliable.&lt;/p&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Verilog"></category></entry><entry><title>"Verilog Timeformat"</title><link href="http://lizard-spock.co.uk/pelican_test/verilog-timeformat.html" rel="alternate"></link><published>2015-03-26T19:21:25+00:00</published><updated>2015-03-26T19:21:25+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-03-26:/pelican_test/verilog-timeformat.html</id><summary type="html">&lt;p&gt;Time can be displayed during simulation using &lt;code&gt;%t&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$display(&amp;quot;%t&amp;quot;, $realtime);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Timeformat is used to control the way (&lt;code&gt;%t&lt;/code&gt;) this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Time can be displayed during simulation using &lt;code&gt;%t&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$display(&amp;quot;%t&amp;quot;, $realtime);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Timeformat is used to control the way (&lt;code&gt;%t&lt;/code&gt;) this is displayed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;//$timeformat(unit#, prec#, &amp;quot;unit&amp;quot;, minwidth);&lt;/span&gt;
&lt;span class="no"&gt;$&lt;/span&gt;&lt;span class="n"&gt;timeformat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot; ms&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// -3 and &amp;quot; ms&amp;quot; give useful display msg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;unit is the base that time is to be displayed in, from 0 to -15&lt;/li&gt;
&lt;li&gt;precision is the number of decimal points to display.&lt;/li&gt;
&lt;li&gt;"unit" is a string appended to the time, such as " ns".&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;minwidth is the minimum number of characters that will be displayed.&lt;/p&gt;
&lt;p&gt;0 = 1 sec
 -1 = 100 ms
 -2 = 10 ms
 -3 = 1 ms
 -4 = 100 us
 -5 = 10 us
 -6 = 1 us
 -7 = 100 ns
 -8 = 10 ns
 -9 = 1 ns
-10 = 100 ps
-11 = 10 ps
-12 = 1 ps
-13 = 100 fs
-14 = 10 fs
-15 = 1 fs&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Verilog"></category></entry><entry><title>"Tiered Raised Bed"</title><link href="http://lizard-spock.co.uk/pelican_test/tiered-raised-bed.html" rel="alternate"></link><published>2015-03-24T19:17:45+00:00</published><updated>2015-03-24T19:17:45+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-03-24:/pelican_test/tiered-raised-bed.html</id><content type="html">&lt;p&gt;Decorative raised bed for lavender:
&lt;img alt="" src="/images/Gardening/morganp-20141012-RaisedBed-IMG_9605.jpg"&gt;
&lt;img alt="" src="/images/Gardening/morganp-20141012-RaisedBed-IMG_9607.jpg"&gt;&lt;/p&gt;
&lt;p&gt;A couple of images before it was filled:
&lt;img alt="" src="/images/Gardening/morganp-20140708-RaisedBed-_MG_9173.jpg"&gt;
&lt;img alt="" src="/images/Gardening/morganp-20140708-RaisedBed-_MG_9175.jpg"&gt;&lt;/p&gt;</content><category term="Home"></category><category term="DIY"></category><category term="Garden"></category></entry><entry><title>"OS X disable back gesture"</title><link href="http://lizard-spock.co.uk/pelican_test/os-x-disable-back-gesture.html" rel="alternate"></link><published>2015-02-18T18:26:07+00:00</published><updated>2015-02-18T18:26:07+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-02-18:/pelican_test/os-x-disable-back-gesture.html</id><summary type="html">&lt;p&gt;After accidentally scrolling back a page when browsing the web in chrome too many times. Figured out how to disable …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After accidentally scrolling back a page when browsing the web in chrome too many times. Figured out how to disable it: from your terminal&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool FALSE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://apple.stackexchange.com/questions/21236/how-do-i-disable-chromes-two-finger-back-forward-navigation"&gt;From 
http://apple.stackexchange.com&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category><category term="OS X"></category></entry><entry><title>"SystemVerilog: Constrained Random"</title><link href="http://lizard-spock.co.uk/pelican_test/systemverilog-constrained-random.html" rel="alternate"></link><published>2015-02-18T17:01:56+00:00</published><updated>2015-02-18T17:01:56+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-02-18:/pelican_test/systemverilog-constrained-random.html</id><summary type="html">&lt;p&gt;A minimal example of constrained random to constraining a 4 bit value to 0 to 11 when randomised.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tb …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;A minimal example of constrained random to constraining a 4 bit value to 0 to 11 when randomised.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cr_example_t&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;constrain&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;sel&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;endclass&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;cr_example_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cr_example&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;test_program&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cr_example&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randomise&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cr_example&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cr_example&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sel&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;finish&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;endmodule&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Verilog"></category><category term="SystemVerilog"></category><category term="Verification"></category><category term="Programming"></category></entry><entry><title>"Verilog: Thermometer Code"</title><link href="http://lizard-spock.co.uk/pelican_test/verilog-thermometer-code.html" rel="alternate"></link><published>2015-02-18T16:51:43+00:00</published><updated>2015-02-18T16:51:43+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-02-18:/pelican_test/verilog-thermometer-code.html</id><summary type="html">&lt;p&gt;Efficiently create a &lt;a href="http://en.wikipedia.org/wiki/Unary_coding"&gt;thermometer code&lt;/a&gt; in verilog:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;localparam&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;M-1:0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;therm_code&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;input&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;$clog2(M):0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;begin …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Efficiently create a &lt;a href="http://en.wikipedia.org/wiki/Unary_coding"&gt;thermometer code&lt;/a&gt; in verilog:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;localparam&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;M-1:0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;therm_code&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;input&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;$clog2(M):0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;begin&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;begin&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;therm_code&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;endfunction&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Other methods which do not synthesis as well:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;therm_code  = (2**val) - 1;

therm_code = ~({M{1&amp;#39;b1}} &amp;lt;&amp;lt; val);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Verilog"></category><category term="Programming"></category></entry><entry><title>"Vim: Macro"</title><link href="http://lizard-spock.co.uk/pelican_test/vim-macro.html" rel="alternate"></link><published>2015-02-18T16:41:40+00:00</published><updated>2015-02-18T16:41:40+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-02-18:/pelican_test/vim-macro.html</id><summary type="html">&lt;p&gt;When &lt;code&gt;.&lt;/code&gt; just will not do (repeats last action) because you need to capture  a movement as well, macros are quick …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When &lt;code&gt;.&lt;/code&gt; just will not do (repeats last action) because you need to capture  a movement as well, macros are quick to create and use.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;q&amp;lt;number&amp;gt;&amp;lt;actions&amp;gt;q
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Replay macro&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;@&amp;lt;number&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Replay macro 10 times&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Example
Yank and put line, then repeat 10 times.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;q1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;yyP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;

&lt;span class="mi"&gt;10@1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="Vim"></category></entry><entry><title>"Find your ruby gems path"</title><link href="http://lizard-spock.co.uk/pelican_test/find-your-ruby-gems-path.html" rel="alternate"></link><published>2015-02-18T16:39:32+00:00</published><updated>2015-02-18T16:39:32+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2015-02-18:/pelican_test/find-your-ruby-gems-path.html</id><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; ruby -r rubygems -e &amp;quot;p Gem.path&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;From &lt;a href="http://gilesbowkett.blogspot.co.uk/2009/06/find-your-ruby-gems-path.html"&gt;Giles Bowkett&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category><category term="Ruby"></category><category term="Programming"></category></entry><entry><title>"Bread: Doves Gluten free"</title><link href="http://lizard-spock.co.uk/pelican_test/bread-doves-gluten-free.html" rel="alternate"></link><published>2014-12-21T20:12:44+00:00</published><updated>2014-12-21T20:12:44+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-12-21:/pelican_test/bread-doves-gluten-free.html</id><summary type="html">&lt;p&gt;For use with the Panasonic Bread Maker SD-2501 &amp;amp; SD-2500.&lt;br&gt;
&lt;strong&gt;&lt;a href="http://www.lakeland.co.uk/content/documents/Panasonic_Bread_Maker_Instructions_15352.pdf"&gt;Online Manual&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Gluten Recipes can not use timer function.&lt;/p&gt;
&lt;p&gt;For best …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For use with the Panasonic Bread Maker SD-2501 &amp;amp; SD-2500.&lt;br&gt;
&lt;strong&gt;&lt;a href="http://www.lakeland.co.uk/content/documents/Panasonic_Bread_Maker_Instructions_15352.pdf"&gt;Online Manual&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Gluten Recipes can not use timer function.&lt;/p&gt;
&lt;p&gt;For best results follow this order of ingredients: &lt;br&gt;
water, salt, fat, gluten free bread mix.&lt;/p&gt;
&lt;h2&gt;Doves Farm Gluten Free (Panasonic recipe)&lt;/h2&gt;
&lt;p&gt;SD-2501 Menu 12&lt;br&gt;
 SD-2500 Menu 11&lt;/p&gt;
&lt;p&gt;Dark Crust (1hr 55min)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;Water&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="mi"&gt;320&lt;/span&gt;&lt;span class="nv"&gt;ml&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;330&lt;/span&gt;&lt;span class="nv"&gt;ml&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Brown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;flour&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;Cider&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Vinegar&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;teaspoon&lt;/span&gt;
&lt;span class="nv"&gt;Salt&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;teaspoon&lt;/span&gt;
&lt;span class="nv"&gt;Vegtable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Oil&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;tablespoon&lt;/span&gt;
&lt;span class="nv"&gt;Medium&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Egg&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nv"&gt;Medium&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Egg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;White&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nv"&gt;Sugar&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;tablespoon&lt;/span&gt;
&lt;span class="nv"&gt;Flour&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="nv"&gt;g&lt;/span&gt;
&lt;span class="nv"&gt;Yeast&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;teaspoon&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;&lt;a href="http://www.dovesfarm.co.uk/recipes/gluten-free-white-bread-for-bread-machines"&gt;Doves farm recommends these ingredients&lt;/a&gt;:&lt;/h2&gt;
&lt;p&gt;SD-2501 Menu 12&lt;br&gt;
 SD-2500 Menu 11&lt;/p&gt;
&lt;p&gt;Dark Crust (1hr 55min)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;         Medium        Large
Milk     310g          465g
Vinegar  1 teaspoon    1.5 teaspoon
Oil      6 tablespoon  9   tablespoon
Eggs     2             3
Flour    450g          675g
Salt     1 teaspoon    1.5 teaspoon
Sugar    2 tablespoon  3   tablespoon
Yeast    2 teaspoon    3   teaspoon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Mix milk, vinegar, oil and eggs. Pour into the bread machine.&lt;/li&gt;
&lt;li&gt;Add flour, salt and sugar, stir.&lt;/li&gt;
&lt;li&gt;Sprinkle Yeast on top&lt;/li&gt;
&lt;li&gt;Start machine, pausing after a few minutes to scrape down the sides.&lt;/li&gt;
&lt;li&gt;Resume programme until completion&lt;/li&gt;
&lt;/ol&gt;</content><category term="Cooking"></category><category term="Recipe"></category><category term="Bread"></category><category term="Gluten Free"></category></entry><entry><title>"Verilog: Calculate primes"</title><link href="http://lizard-spock.co.uk/pelican_test/verilog-calculate-primes.html" rel="alternate"></link><published>2014-12-20T07:28:41+00:00</published><updated>2014-12-20T07:28:41+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-12-20:/pelican_test/verilog-calculate-primes.html</id><summary type="html">&lt;p&gt;Based on my answer to &lt;a href="http://stackoverflow.com/q/27461173/97073"&gt;this SO Question&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://www.mathsisfun.com/definitions/prime-number.html"&gt;Definition of Prime&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A Prime Number can be divided evenly only by …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Based on my answer to &lt;a href="http://stackoverflow.com/q/27461173/97073"&gt;this SO Question&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://www.mathsisfun.com/definitions/prime-number.html"&gt;Definition of Prime&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A Prime Number can be divided evenly only by 1, or itself. 
And it must be a whole number greater than 1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A simple method would be to iterate over numbers 2 to N, checking if it was divisible by all natural numbers greater than 2, and below the current value.&lt;/p&gt;
&lt;p&gt;Once checked that it is not divisible by 2 there is not point checking for 4, 6, 8 etc. 
Remembering the definition of prime all numbers that are not prime are integer multiples of prime. so we have reduced the amount of work involved in testing primality.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;parameter&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;
&lt;span class="n"&gt;reg&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;31:0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prime_number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0:N-1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Store&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prime&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;
&lt;span class="k"&gt;integer&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;primality&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;
&lt;span class="k"&gt;integer&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Currently&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;looking&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;th prime &lt;/span&gt;
&lt;span class="s1"&gt;integer          index    ; // Counts 1 to k, indexing previous primes &lt;/span&gt;
&lt;span class="s1"&gt;integer          number_ut; // Number Under test&lt;/span&gt;

&lt;span class="s1"&gt;reg        [1:0] state   ; &lt;/span&gt;
&lt;span class="s1"&gt;localparam       S_INC   = 2&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;b01&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;localparam&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="n"&gt;S_CHECK&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b10;&lt;/span&gt;

&lt;span class="s1"&gt;initial begin&lt;/span&gt;
&lt;span class="s1"&gt;  prime_number[0] = &amp;#39;&lt;/span&gt;&lt;span class="n"&gt;d2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;Preload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Prime&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;state&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S_CHECK&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="k"&gt;Check&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;first&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;number_ut&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;d3; // Number Under Test&lt;/span&gt;
&lt;span class="s1"&gt;  k               = &amp;#39;&lt;/span&gt;&lt;span class="n"&gt;d1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Position&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;preloaded&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;d0;&lt;/span&gt;
&lt;span class="s1"&gt;  test            = &amp;#39;&lt;/span&gt;&lt;span class="n"&gt;d1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;always&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;posedge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;clk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;begin&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;state&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S_INC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;begin&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;number_ut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number_ut&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;state&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S_CHECK&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;d0;&lt;/span&gt;
&lt;span class="s1"&gt;    test      &amp;lt;= &amp;#39;&lt;/span&gt;&lt;span class="n"&gt;d1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Safe&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;state&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S_CHECK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;begin&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;begin&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Failed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Prime&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exact&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;divisor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;found&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Reject %3d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number_ut&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;state&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S_INC&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;begin&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;Passed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Prime&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;check&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="k"&gt;Use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;nd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Found the %1d th Prime, it is %1d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number_ut&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;prime_number&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number_ut&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;state&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S_INC&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;begin&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number_ut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prime_number&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://www.edaplayground.com/x/BzX"&gt;Example on EDA Playground&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is however just a programming exercise as the resulting hardware is likely substantially bigger than just implementing a look up table to the maxim number of primes you can fit in &lt;code&gt;prime_number&lt;/code&gt;. The look up table will also be ready from time zero and not need to recompute every time you power up.&lt;/p&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Math"></category><category term="Verilog"></category></entry><entry><title>"tcsh Remove trailing /"</title><link href="http://lizard-spock.co.uk/pelican_test/tcsh-remove-trailing.html" rel="alternate"></link><published>2014-10-08T21:15:43+01:00</published><updated>2014-10-08T21:15:43+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-10-08:/pelican_test/tcsh-remove-trailing.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/tcsh&lt;/span&gt;

&lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;helloworld/&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;## http://dbaspot.com/shell/350417-sed-removing-trailing.html&lt;/span&gt;
&lt;span class="nb"&gt;set …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/tcsh&lt;/span&gt;

&lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;helloworld/&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;## http://dbaspot.com/shell/350417-sed-removing-trailing.html&lt;/span&gt;
&lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$var&amp;quot;&lt;/span&gt; | sed -e &lt;span class="s1"&gt;&amp;#39;s,\(.\)/$,\1,&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$var&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="Programming"></category></entry><entry><title>"F-Stop Loka &amp; Tripod"</title><link href="http://lizard-spock.co.uk/pelican_test/f-stop-loka-tripod.html" rel="alternate"></link><published>2014-09-18T11:28:47+01:00</published><updated>2014-09-18T11:28:47+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-09-18:/pelican_test/f-stop-loka-tripod.html</id><summary type="html">&lt;p&gt;F-stop Loka with side mounted Manfrotto 055XPROB (3 stage carbon), with a Manfrotto 488 rc2 head.&lt;/p&gt;
&lt;p _="%" _images_Photography_Loka_morganp-20140416-Loka-_MG_7449.jpg="/images/Photography/Loka/morganp-20140416-Loka-_MG_7449.jpg" centre img&gt;{% img centre /images/Photography …&lt;/p&gt;</summary><content type="html">&lt;p&gt;F-stop Loka with side mounted Manfrotto 055XPROB (3 stage carbon), with a Manfrotto 488 rc2 head.&lt;/p&gt;
&lt;p _="%" _images_Photography_Loka_morganp-20140416-Loka-_MG_7449.jpg="/images/Photography/Loka/morganp-20140416-Loka-_MG_7449.jpg" centre img&gt;{% img centre /images/Photography/Loka/morganp-20140416-Loka-_MG_7445.jpg %}&lt;/p&gt;
&lt;p&gt;Tripod relatively secure in this position, although if not tightly strapped down movement does loosen the straps.&lt;/p&gt;
&lt;p&gt;NB: also a thinktank skin 50 mounted on the hip belt.&lt;/p&gt;</content><category term="Photography"></category><category term="fstop"></category><category term="Loka"></category></entry><entry><title>"Command line bulk file rename"</title><link href="http://lizard-spock.co.uk/pelican_test/command-line-bulk-file-rename.html" rel="alternate"></link><published>2014-09-05T18:06:05+01:00</published><updated>2014-09-05T18:06:05+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-09-05:/pelican_test/command-line-bulk-file-rename.html</id><summary type="html">&lt;p&gt;To prepend to to filenames&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cd to_folder
ls | xargs -I {} mv {} addthis-{}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or target jpgs&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cd to_folder
ls *.jpg | xargs …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;To prepend to to filenames&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cd to_folder
ls | xargs -I {} mv {} addthis-{}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or target jpgs&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cd to_folder
ls *.jpg | xargs -I {} mv {} addthis-{}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;http://www.peteryu.ca/tutorials/shellscripting/batch_rename&lt;/p&gt;</content><category term="Tech"></category><category term="Programming"></category><category term="Command Line"></category></entry><entry><title>"Word WORD the Difference"</title><link href="http://lizard-spock.co.uk/pelican_test/word-word-the-difference.html" rel="alternate"></link><published>2014-08-19T06:27:30+01:00</published><updated>2014-08-19T06:27:30+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-08-19:/pelican_test/word-word-the-difference.html</id><summary type="html">&lt;p&gt;Just realised there is a difference between word and WORD in Vim.&lt;/p&gt;
&lt;p&gt;WORD is non-blank delimited by whitespace.
word is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Just realised there is a difference between word and WORD in Vim.&lt;/p&gt;
&lt;p&gt;WORD is non-blank delimited by whitespace.
word is alpha-numeric and other non-blank characters delimited by whitespace and punctuation. 'iskeyword' can be used to move delimiters in to part of the selection of the word.&lt;/p&gt;
&lt;p&gt;by default :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;this-is-four-words
this-is-one-WORD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="Vim"></category></entry><entry><title>"List files ignored by git"</title><link href="http://lizard-spock.co.uk/pelican_test/list-files-ignored-by-git.html" rel="alternate"></link><published>2014-07-30T20:18:07+01:00</published><updated>2014-07-30T20:18:07+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-07-30:/pelican_test/list-files-ignored-by-git.html</id><content type="html">&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=4VBG9FlyiOw"&gt;From Github Training &amp;amp; Guides&lt;/a&gt;.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git ls-files --others --ignored --exclude-standard
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="Programming"></category><category term="Git"></category></entry><entry><title>"xkill"</title><link href="http://lizard-spock.co.uk/pelican_test/xkill.html" rel="alternate"></link><published>2014-07-30T20:16:39+01:00</published><updated>2014-07-30T20:16:39+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-07-30:/pelican_test/xkill.html</id><summary type="html">&lt;p&gt;I just discovered the &lt;code&gt;xkill&lt;/code&gt; command, when a window has crashed you
can call xkill and get a skull and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I just discovered the &lt;code&gt;xkill&lt;/code&gt; command, when a window has crashed you
can call xkill and get a skull and crossbones cursor to kill the application.&lt;/p&gt;
&lt;p&gt;It even works well with remote GUI applications (Sun Grid Engine SGE).&lt;/p&gt;</content><category term="Tech"></category><category term="Programming"></category><category term="SGE"></category></entry><entry><title>"Submit to SGE as if working locally"</title><link href="http://lizard-spock.co.uk/pelican_test/submit-to-sge-as-if-working-locally.html" rel="alternate"></link><published>2014-07-30T20:13:23+01:00</published><updated>2014-07-30T20:13:23+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-07-30:/pelican_test/submit-to-sge-as-if-working-locally.html</id><summary type="html">&lt;p&gt;Setting an alias in you .tcshrc&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;alias qrun &amp;#39;qrsh -V -noshell -cwd !*&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or bash &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;alias qrun=&amp;#39;qrsh -V -noshell -cwd …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Setting an alias in you .tcshrc&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;alias qrun &amp;#39;qrsh -V -noshell -cwd !*&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or bash &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;alias qrun=&amp;#39;qrsh -V -noshell -cwd !*&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which makes submitting any script to the grid just:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;qrun helloworld.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Originally asked on &lt;a href="http://superuser.com/a/751162/42141"&gt;superuser&lt;/a&gt;.&lt;/p&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="SGE"></category></entry><entry><title>"Simulink: Scroll wheel erratic behaviour"</title><link href="http://lizard-spock.co.uk/pelican_test/simulink-scroll-wheel-erratic-behaviour.html" rel="alternate"></link><published>2014-07-30T20:08:10+01:00</published><updated>2014-07-30T20:08:10+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-07-30:/pelican_test/simulink-scroll-wheel-erratic-behaviour.html</id><summary type="html">&lt;p&gt;On Mac OS X matlab behaves quite oddly with the track pad zooming
in and out very quickly and erratically …&lt;/p&gt;</summary><content type="html">&lt;p&gt;On Mac OS X matlab behaves quite oddly with the track pad zooming
in and out very quickly and erratically to remove this behaviour
&lt;strong&gt;Disable Mouse Scroll Wheel Zoom Behavior&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;To disable the zoom behavior for the scroll wheel:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;File &amp;gt; 
  Simulink Preferences &amp;gt; 
    Editor Defaults &amp;gt; 
      Scroll wheel controls zooming preference.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you hold the Ctrl key and use the scroll wheel, the scroll wheel behavior is the opposite of how the preference is set. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.mathworks.co.uk/help/simulink/ug/zooming-block-diagrams.html"&gt;source&lt;/a&gt;.&lt;/p&gt;</content><category term="Engineering"></category><category term="Simulink"></category></entry><entry><title>"Matlab editor no tabs"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-editor-no-tabs.html" rel="alternate"></link><published>2014-07-30T20:04:15+01:00</published><updated>2014-07-30T20:04:15+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-07-30:/pelican_test/matlab-editor-no-tabs.html</id><summary type="html">&lt;p&gt;Matlab always use to open text files in tabs in the same editor window. When switching to 2014a documents started …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Matlab always use to open text files in tabs in the same editor window. When switching to 2014a documents started opening as separate windows.&lt;/p&gt;
&lt;p&gt;It seems to have been a problem which &lt;a href="http://www.mathworks.co.uk/matlabcentral/answers/9587-editor-multiple-tabs"&gt;occasionally shows up for others&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Current solution is to dock the editor (ctrl-shift-D) , open multiple files (2 or more) then undock the group (ctrl-shift-U).&lt;/p&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Matlab"></category></entry><entry><title>"Simulink: Globally set sample time"</title><link href="http://lizard-spock.co.uk/pelican_test/simulink-globally-set-sample-time.html" rel="alternate"></link><published>2014-07-30T20:01:49+01:00</published><updated>2014-07-30T20:01:49+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-07-30:/pelican_test/simulink-globally-set-sample-time.html</id><summary type="html">&lt;p&gt;To set each constant in a model to sample time -1:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;blks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;find_system&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;dut&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;BlockType&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Constant&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;length …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;To set each constant in a model to sample time -1:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;blks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;find_system&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;dut&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;BlockType&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Constant&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;length&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;blks&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;set_param&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;blks&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SampleTime&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-1&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://www.mathworks.co.uk/help/hdlcoder/ug/resource-sharing.html#btg_5ht-1"&gt;Source&lt;/a&gt;.&lt;/p&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Matlab"></category><category term="Simulink"></category></entry><entry><title>"Simulink: list programmable block properties"</title><link href="http://lizard-spock.co.uk/pelican_test/simulink-list-programmable-block-properties.html" rel="alternate"></link><published>2014-07-30T20:00:28+01:00</published><updated>2014-07-30T20:00:28+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-07-30:/pelican_test/simulink-list-programmable-block-properties.html</id><summary type="html">&lt;p&gt;Select a block ie gain in Simulink then in Matlab type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;get(gcbh)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This shows the list of properties which …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Select a block ie gain in Simulink then in Matlab type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;get(gcbh)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This shows the list of properties which can be controlled from Matlab. TO change one for example changing the gain paramter from double to a 10 bit fixed point number (&lt;code&gt;sfix10_en9&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;set_param(gcbh, &amp;#39;ParamDataTypeStr&amp;#39;, &amp;#39;fixdt(1,10,9)&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://www.mathworks.co.uk/matlabcentral/newsreader/view_thread/306640"&gt;From Matlab Central&lt;/a&gt;.&lt;/p&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Simulink"></category></entry><entry><title>"Matlab: Find all gain blocks"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-find-all-gain-blocks.html" rel="alternate"></link><published>2014-07-30T19:58:53+01:00</published><updated>2014-07-30T19:58:53+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-07-30:/pelican_test/matlab-find-all-gain-blocks.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find_system(&amp;#39;BlockType&amp;#39;, &amp;#39;Gain&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will list all gain blocks in currently loaded models. to limit to a particulat model:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find_system …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find_system(&amp;#39;BlockType&amp;#39;, &amp;#39;Gain&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will list all gain blocks in currently loaded models. to limit to a particulat model:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find_system(&amp;#39;testharness&amp;#39;, &amp;#39;BlockType&amp;#39;, &amp;#39;Gain&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://www.mathworks.co.uk/help/simulink/slref/find_system.html"&gt;From Mathworks&lt;/a&gt;.&lt;/p&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Matlab"></category><category term="Simulink"></category></entry><entry><title>"error: storage class specified for parameter"</title><link href="http://lizard-spock.co.uk/pelican_test/error-storage-class-specified-for-parameter.html" rel="alternate"></link><published>2014-06-19T20:42:33+01:00</published><updated>2014-06-19T20:42:33+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-06-19:/pelican_test/error-storage-class-specified-for-parameter.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;specified&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;parameter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://stackoverflow.com/q/3676969/97073"&gt;There is probably a missing semicolon &lt;code&gt;;&lt;/code&gt; in a header file!&lt;/a&gt; Just written my first …&lt;/p&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;specified&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;parameter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://stackoverflow.com/q/3676969/97073"&gt;There is probably a missing semicolon &lt;code&gt;;&lt;/code&gt; in a header file!&lt;/a&gt; Just written my first C Header and received the above warning. It was indeed due to a missing semicolon.&lt;/p&gt;</content><category term="Tech"></category><category term="Programming"></category><category term="C"></category></entry><entry><title>"Shell redirection"</title><link href="http://lizard-spock.co.uk/pelican_test/shell-redirection.html" rel="alternate"></link><published>2014-06-19T20:10:57+01:00</published><updated>2014-06-19T20:10:57+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-06-19:/pelican_test/shell-redirection.html</id><summary type="html">&lt;p&gt;To redirect stdout and stderr in bash we use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./ShellFile.sh &amp;amp;&amp;gt; test.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However in tcsh that results in: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Invalid …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;To redirect stdout and stderr in bash we use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./ShellFile.sh &amp;amp;&amp;gt; test.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However in tcsh that results in: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Invalid null command.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Switch the order of &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt; in tcsh :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./ShellFile.sh &amp;gt;&amp;amp; test.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="Programming"></category><category term="Bash"></category><category term="Tcsh"></category><category term="Command Line"></category></entry><entry><title>"Floating Point Arithmetic is not Associative"</title><link href="http://lizard-spock.co.uk/pelican_test/floating-point-arithmetic-is-not-associative.html" rel="alternate"></link><published>2014-06-19T20:00:45+01:00</published><updated>2014-06-19T20:00:45+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-06-19:/pelican_test/floating-point-arithmetic-is-not-associative.html</id><summary type="html">&lt;p&gt;This can be shown with some easy examples:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;2 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;This can be shown with some easy examples:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;sprintf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%.20f&amp;#39;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Display&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;fractional&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;places&lt;/span&gt;
&lt;span class="k"&gt;sprintf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%.20f&amp;#39;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;ans&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;60000000000000008882&lt;/span&gt;

&lt;span class="nv"&gt;ans&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;59999999999999997780&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Multiplication examples:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;c = 0.1 &lt;span class="gs"&gt;*  0.2 *&lt;/span&gt; 0.3 ;
d = 0.1 &lt;span class="gs"&gt;* (0.2 *&lt;/span&gt; 0.3);

sprintf(&amp;#39;%.20f&amp;#39;, c)
sprintf(&amp;#39;%.20f&amp;#39;, d)

ans =
0.00600000000000000099

ans =
0.00600000000000000012
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By default gcc will not rearrange equations for optimal performance as this would change the accuracy.
The GCC flag &lt;code&gt;-ffast-math&lt;/code&gt; optimizes equations as if they were associative.&lt;/p&gt;
&lt;p&gt;The examples shown here were found on &lt;a href="https://news.ycombinator.com/item?id=7479550"&gt;Hacker News&lt;/a&gt;.&lt;/p&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Matlab"></category></entry><entry><title>"Adobe Creative Cloud is ..."</title><link href="http://lizard-spock.co.uk/pelican_test/adobe-creative-cloud-is.html" rel="alternate"></link><published>2014-06-19T18:15:59+01:00</published><updated>2014-06-19T18:15:59+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-06-19:/pelican_test/adobe-creative-cloud-is.html</id><summary type="html">&lt;p&gt;Inconsistent, annoying, &lt;strong&gt;cheap&lt;/strong&gt;?&lt;/p&gt;
&lt;!-- more --&gt;

&lt;p&gt;My main bugbear with the creative cloud application is the way it updates applications.
Photoshop CC and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Inconsistent, annoying, &lt;strong&gt;cheap&lt;/strong&gt;?&lt;/p&gt;
&lt;!-- more --&gt;

&lt;p&gt;My main bugbear with the creative cloud application is the way it updates applications.
Photoshop CC and Lightroom are handled differently.&lt;/p&gt;
&lt;p&gt;Photoshop switches from installed to update. Which is great it will pull in the update on my command.&lt;/p&gt;
&lt;p&gt;Lightroom switches from Installed to &lt;strong&gt;Try&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Not only that but I have now have 2 version of Photoshop CC and CC (2014) ready
for updates, one of which has not already been installed.&lt;/p&gt;
&lt;p&gt;SO I have 2 applications with updates ready, one wants an update the other refuses
to acknowledge it has been installed and wants a new install. A new program,
Photoshop CC (2014), which only requires an update.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Photography/CC_update.png" title="Adobe Creative Cloud is Inconsistent"&gt;&lt;/p&gt;</content><category term="Photography"></category><category term="CC"></category><category term="Creative Cloud"></category></entry><entry><title>"Octopress categories with different styles"</title><link href="http://lizard-spock.co.uk/pelican_test/octopress-categories-with-different-styles.html" rel="alternate"></link><published>2014-06-14T08:24:01+01:00</published><updated>2014-06-14T08:24:01+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-06-14:/pelican_test/octopress-categories-with-different-styles.html</id><summary type="html">&lt;p&gt;As I use the code blocks for ingredient lists on my recipe pages I wanted to 
have a different style …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As I use the code blocks for ingredient lists on my recipe pages I wanted to 
have a different style, lighter background instead of black.&lt;/p&gt;
&lt;p&gt;I currently manually set a different layout in the _post header:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Tech&lt;/span&gt;

&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recipe&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Cooking&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;!-- more --&gt;

&lt;p&gt;The layout will then look for a matching layout in &lt;code&gt;source/_layouts&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Manually create your new layout (instructions from top level Octopress site):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cp source/_layouts/post.html source/_layouts/recipe.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Edit &lt;code&gt;source/_layouts/recipe.html&lt;/code&gt; changing the role to &lt;code&gt;recipe&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;---&lt;/span&gt;
&lt;span class="nv"&gt;layout&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;default&lt;/span&gt;
&lt;span class="nv"&gt;single&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;true&lt;/span&gt;
&lt;span class="o"&gt;---&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;article&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hentry&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;recipe&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;\{\&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;article&lt;/span&gt;.&lt;span class="nv"&gt;html&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;\&lt;span class="o"&gt;%&lt;/span&gt;\}
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;footer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;meta&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will now pick up the styling that &lt;code&gt;post&lt;/code&gt; also gets but we can target our modifications to &lt;code&gt;article[role="recipe"]&lt;/code&gt;.
For custom stylings apply changes in to the relevant file in &lt;code&gt;sass/custom/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To modify the background colour of a code block&lt;br&gt;
&lt;code&gt;sass/custom/_styles.scss&lt;/code&gt; add:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// Customise the recipe layout&lt;/span&gt;
&lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;role&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;recipe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sidebar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;NB: &lt;code&gt;$sidebar-bg&lt;/code&gt; is defined in &lt;code&gt;sass/base/_theme.scss&lt;/code&gt;&lt;/p&gt;</content><category term="Tech"></category><category term="Programming"></category><category term="Octopress"></category></entry><entry><title>"Verilog: Timeout"</title><link href="http://lizard-spock.co.uk/pelican_test/verilog-timeout.html" rel="alternate"></link><published>2014-06-14T08:08:26+01:00</published><updated>2014-06-14T08:08:26+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-06-14:/pelican_test/verilog-timeout.html</id><summary type="html">&lt;p&gt;To wait for a maximum of &lt;code&gt;10ns&lt;/code&gt; for positive edge on clk then carry on with simulation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wait_or_timeout&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;begin …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;To wait for a maximum of &lt;code&gt;10ns&lt;/code&gt; for positive edge on clk then carry on with simulation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wait_or_timeout&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;disable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wait_or_timeout&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;posedge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;clk&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;disable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wait_or_timeout&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;join&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Often use to fail simulation if the expected signal does not occur,
this stops simulation hanging and allows status reports to be generated.&lt;/p&gt;
&lt;p&gt;Originally posted as &lt;a href="http://stackoverflow.com/a/12372233/97073"&gt;SO answer&lt;/a&gt;.&lt;/p&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Verilog"></category></entry><entry><title>"Matlab Remove Elements from Array"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-remove-elements-from-array.html" rel="alternate"></link><published>2014-06-02T19:08:09+01:00</published><updated>2014-06-02T19:08:09+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-06-02:/pelican_test/matlab-remove-elements-from-array.html</id><summary type="html">&lt;p&gt;Removing elements based on index&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;A&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;10&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;1-D&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;array&lt;/span&gt;
&lt;span class="nt"&gt;A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;4&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;5&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;6&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;7&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;8&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;9 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Removing elements based on index&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;A&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;10&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;1-D&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;array&lt;/span&gt;
&lt;span class="nt"&gt;A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;4&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;5&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;6&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;7&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;8&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;9&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;10&lt;/span&gt;

&lt;span class="nt"&gt;ind&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;indices&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;removed&lt;/span&gt;
&lt;span class="nt"&gt;A&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;ind&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;remove&lt;/span&gt;

&lt;span class="nt"&gt;A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;5&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;6&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;8&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;9&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Based on &lt;a href="http://www.mathworks.co.uk/matlabcentral/newsreader/view_thread/1486880"&gt;Matlab Central&lt;/a&gt;.&lt;/p&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Matlab"></category></entry><entry><title>"Matlab: Formatting Strings"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-formatting-strings.html" rel="alternate"></link><published>2014-06-02T18:46:09+01:00</published><updated>2014-06-02T18:46:09+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-06-02:/pelican_test/matlab-formatting-strings.html</id><summary type="html">&lt;p&gt;The official documentation can be found on &lt;a href="http://www.mathworks.co.uk/help/matlab/matlab_prog/formatting-strings.html#bq0z8vc-6"&gt;mathworks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To display a number with 3 Integer decimal places and 3 fraction …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The official documentation can be found on &lt;a href="http://www.mathworks.co.uk/help/matlab/matlab_prog/formatting-strings.html#bq0z8vc-6"&gt;mathworks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To display a number with 3 Integer decimal places and 3 fraction places 
&lt;code&gt;$f7.3&lt;/code&gt; 7 rather than 6 as need place for the decimal point.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sprintf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;6.3-%6.3f-&amp;#39;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;.&lt;span class="mi"&gt;678&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;.&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;.&lt;span class="mi"&gt;678&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sprintf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;6.3-%6.3f-&amp;#39;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;.&lt;span class="mi"&gt;678&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;.&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;.&lt;span class="mi"&gt;678&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sprintf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;6.3-%6.3f-&amp;#39;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;.&lt;span class="mi"&gt;678&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;.&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;.&lt;span class="mi"&gt;678&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;-ve numbers&lt;/h2&gt;
&lt;p&gt;If signed you need to leave space for -ve &lt;code&gt;$f8.3&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sprintf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;7.3-%7.3f-&amp;#39;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;.&lt;span class="mi"&gt;678&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;.&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;.&lt;span class="mi"&gt;678&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sprintf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;7.3-%7.3f-&amp;#39;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;.&lt;span class="mi"&gt;678&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;.&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;.&lt;span class="mi"&gt;678&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sprintf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;8.3-%8.3f-&amp;#39;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;.&lt;span class="mi"&gt;678&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;.&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;.&lt;span class="mi"&gt;678&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For reliable and consistent floating point displays use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;%(fractional places + integer places + 2).(fractional places)f&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Matlab"></category></entry><entry><title>"Matlab: Grid"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-grid.html" rel="alternate"></link><published>2014-05-28T19:49:38+01:00</published><updated>2014-05-28T19:49:38+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-05-28:/pelican_test/matlab-grid.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="/images/Engineering/matlab_grid/grid_on.png"&gt;&lt;/p&gt;
&lt;p&gt;To add X and Y grids to plots :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grid on;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;img alt="" src="/images/Engineering/matlab_grid/y_grid_on.png"&gt;&lt;/p&gt;
&lt;p&gt;To add Y only grid:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;set(gca,&amp;#39;XGrid&amp;#39;,&amp;#39;off&amp;#39;,&amp;#39;YGrid …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="/images/Engineering/matlab_grid/grid_on.png"&gt;&lt;/p&gt;
&lt;p&gt;To add X and Y grids to plots :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grid on;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;img alt="" src="/images/Engineering/matlab_grid/y_grid_on.png"&gt;&lt;/p&gt;
&lt;p&gt;To add Y only grid:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;set(gca,&amp;#39;XGrid&amp;#39;,&amp;#39;off&amp;#39;,&amp;#39;YGrid&amp;#39;,&amp;#39;on&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/images/Engineering/matlab_grid/x_grid_on.png"&gt;&lt;/p&gt;
&lt;p&gt;To add X only grid&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;set(gca,&amp;#39;XGrid&amp;#39;,&amp;#39;on&amp;#39;,&amp;#39;YGrid&amp;#39;,’off&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Matlab"></category></entry><entry><title>"Matlab: Line Breaks in Strings"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-line-breaks-in-strings.html" rel="alternate"></link><published>2014-05-28T19:34:30+01:00</published><updated>2014-05-28T19:34:30+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-05-28:/pelican_test/matlab-line-breaks-in-strings.html</id><summary type="html">&lt;p&gt;Wrap strings with &lt;code&gt;sprintf&lt;/code&gt; to allow the &lt;code&gt;\n&lt;/code&gt; to be escaped correctly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;disp&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello\nworld&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;hello&lt;/span&gt;\&lt;span class="nv"&gt;nworld&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;disp&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="k"&gt;sprintf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Wrap strings with &lt;code&gt;sprintf&lt;/code&gt; to allow the &lt;code&gt;\n&lt;/code&gt; to be escaped correctly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;disp&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello\nworld&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;hello&lt;/span&gt;\&lt;span class="nv"&gt;nworld&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;disp&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="k"&gt;sprintf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello\nworld&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;hello&lt;/span&gt;
&lt;span class="nv"&gt;world&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Matlab"></category></entry><entry><title>"Matlab: Listing field name values of a struct"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-listing-field-name-values-of-a-struct.html" rel="alternate"></link><published>2014-05-28T19:05:01+01:00</published><updated>2014-05-28T19:05:01+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-05-28:/pelican_test/matlab-listing-field-name-values-of-a-struct.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;s = struct ;
s(1).dat =‘a&amp;#39; ;
s(1).freq=11 ;
s(2).dat =‘b&amp;#39; ;
s(2).freq=22 ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;s …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;s = struct ;
s(1).dat =‘a&amp;#39; ;
s(1).freq=11 ;
s(2).dat =‘b&amp;#39; ;
s(2).freq=22 ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;s(1)

ans =

     dat: &amp;#39;a&amp;#39;
    freq: 11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;How do you access [‘a’, ‘b’] and [11, 22]?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[s.dat] , [s.freq]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;[]&lt;/code&gt; are really important here.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[s.freq]&lt;/span&gt;

&lt;span class="na"&gt;ans&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;11    22&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://blogs.mathworks.com/loren/2007/04/19/vectorizing-access-to-an-array-of-structures/"&gt;Solution found on a Loren Post&lt;/a&gt;.&lt;/p&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Matlab"></category></entry><entry><title>"F-Stop ICU Strobies"</title><link href="http://lizard-spock.co.uk/pelican_test/f-stop-icu-strobies.html" rel="alternate"></link><published>2014-05-28T18:44:55+01:00</published><updated>2014-05-28T18:44:55+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-05-28:/pelican_test/f-stop-icu-strobies.html</id><summary type="html">&lt;p&gt;My large ICU loaded with my &lt;a href="http://www.wexphotographic.com/buy-interfit-strobies-portrait-kit/p1031888"&gt;Strobies portrait kit&lt;/a&gt; and Canon 580EX MKII.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Photography/fstop_icu_large_lighting/morganp-20140517-FStop-_MG_8927.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The collapsed soft box is folded into …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My large ICU loaded with my &lt;a href="http://www.wexphotographic.com/buy-interfit-strobies-portrait-kit/p1031888"&gt;Strobies portrait kit&lt;/a&gt; and Canon 580EX MKII.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Photography/fstop_icu_large_lighting/morganp-20140517-FStop-_MG_8927.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The collapsed soft box is folded into the right hand side. Additional accessories are a &lt;a href="https://www.amazon.co.uk/dp/B0007DDK7A?tag=morgue-21&amp;amp;camp=2902&amp;amp;creative=19466&amp;amp;linkCode=as4&amp;amp;creativeASIN=B0007DDK7A&amp;amp;adid=1VSQ11QZRMHHASH7FHN9&amp;amp;"&gt;3M Lastolite off camera cord&lt;/a&gt;, &lt;a href="https://www.amazon.co.uk/dp/B002D4AHT0?tag=morgue-21&amp;amp;camp=2902&amp;amp;creative=19466&amp;amp;linkCode=as4&amp;amp;creativeASIN=B002D4AHT0&amp;amp;adid=0PB41F04SGBY01WKVJYB&amp;amp;"&gt;Colorvision SpyderCube&lt;/a&gt; and a &lt;a href="https://www.amazon.co.uk/dp/B0007DDK7A?tag=morgue-21&amp;amp;camp=2902&amp;amp;creative=19466&amp;amp;linkCode=as4&amp;amp;creativeASIN=B0007DDK7A&amp;amp;adid=1VSQ11QZRMHHASH7FHN9&amp;amp;"&gt;Stofen&lt;/a&gt;.&lt;/p&gt;</content><category term="Photography"></category><category term="fstop"></category><category term="ICU"></category><category term="Canon"></category></entry><entry><title>"Kettlebell Rack"</title><link href="http://lizard-spock.co.uk/pelican_test/kettlebell-rack.html" rel="alternate"></link><published>2014-05-28T18:32:43+01:00</published><updated>2014-05-28T18:32:43+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-05-28:/pelican_test/kettlebell-rack.html</id><content type="html">&lt;p&gt;&lt;img alt="" src="/images/Home/KettlebellRack/morganp-20140518-diy-_MG_8954.jpg"&gt;
Kettlebell rack with 24kg, 16kg, 8kg, 12kg, 16kg, 20kg.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Home/KettlebellRack/morganp-20140518-diy-_MG_8960.jpg"&gt;
End detail showing bracing.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Home/KettlebellRack/morganp-20140518-diy-_MG_8968.jpg"&gt;
Underside of rack.&lt;/p&gt;</content><category term="Home"></category><category term="Kettlebell"></category><category term="Woodwork"></category></entry><entry><title>"Matlab toolboxes with absolute path setup"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-toolboxes-with-absolute-path-setup.html" rel="alternate"></link><published>2014-05-07T18:22:48+01:00</published><updated>2014-05-07T18:22:48+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-05-07:/pelican_test/matlab-toolboxes-with-absolute-path-setup.html</id><summary type="html">&lt;p&gt;When a script or function is called with &lt;code&gt;run(./relative/path/script)&lt;/code&gt; the working directory is changed to the &lt;code&gt;./relative …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;When a script or function is called with &lt;code&gt;run(./relative/path/script)&lt;/code&gt; the working directory is changed to the &lt;code&gt;./relative/path&lt;/code&gt;. This means &lt;code&gt;pwd&lt;/code&gt; it can be used to specify absolute paths:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;libs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;example_toolbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;load_toolbox&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which contains :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;addpath([pwd, &amp;#39;/function&amp;#39;]);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now  The path will contain &lt;code&gt;C:/ ... /libs/example_toolbox/function&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;As shown in the example this is useful for toolboxes etc which could be distributed with a top level script which adds the toolbox functions on to the path.&lt;/p&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Matlab"></category></entry><entry><title>"Matlab: Array content check"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-array-content-check.html" rel="alternate"></link><published>2014-05-07T18:13:24+01:00</published><updated>2014-05-07T18:13:24+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-05-07:/pelican_test/matlab-array-content-check.html</id><summary type="html">&lt;p&gt;Checking if an Array contains a number:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;input = [1,2,3,4];
check = 4;
any(input==4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check if a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Checking if an Array contains a number:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;input = [1,2,3,4];
check = 4;
any(input==4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check if a number is contained in an array:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;input = 32;
check = [32,64,128];
any( check==input )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Programming"></category><category term="Matlab"></category></entry><entry><title>"Matlab: Split Odd &amp; Even Array Elements"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-split-odd-even-array-elements.html" rel="alternate"></link><published>2014-05-07T17:58:33+01:00</published><updated>2014-05-07T17:58:33+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-05-07:/pelican_test/matlab-split-odd-even-array-elements.html</id><summary type="html">&lt;p&gt;Using Matlab to splitting data into odd and even samples.&lt;/p&gt;
&lt;p&gt;A for loop approach:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;data_odd&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="n"&gt;data_even&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;length …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Using Matlab to splitting data into odd and even samples.&lt;/p&gt;
&lt;p&gt;A for loop approach:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;data_odd&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="n"&gt;data_even&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;mod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c"&gt;%% disp(&amp;#39;odd&amp;#39;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;data_odd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data_odd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c"&gt;%% disp(&amp;#39;even&amp;#39;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;data_even&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data_even&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Matlab approach using ranges to remap values:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;data_odd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;data&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;end&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;data_even&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;data&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;end&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ranges are composed of &lt;code&gt;start_index:step_size:end_index&lt;/code&gt;. If step_size is omitted, 1 is assumed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;end&lt;/code&gt; has a special meaning when used inside an array, it is the position of the last element.
To append to an array you could use &lt;code&gt;data(end+1) = append_value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;No error or warning is triggered if the &lt;code&gt;end_index&lt;/code&gt; can not be reached with the given step size, which is why this works with &lt;code&gt;end&lt;/code&gt; as the stop point of both sides.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;odd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;:&lt;span class="mi"&gt;2&lt;/span&gt;:&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;even&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;:&lt;span class="mi"&gt;2&lt;/span&gt;:&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;odd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;

&lt;span class="nv"&gt;even&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Matlab"></category><category term="Programming"></category></entry><entry><title>"Lee Standard Hood"</title><link href="http://lizard-spock.co.uk/pelican_test/lee-standard-hood.html" rel="alternate"></link><published>2014-05-05T20:36:43+01:00</published><updated>2014-05-05T20:36:43+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-05-05:/pelican_test/lee-standard-hood.html</id><summary type="html">&lt;p&gt;Available to buy from &lt;a href="http://www.wexphotographic.com/buy-lee-standard-lens-hood/p1010398"&gt;WEX&lt;/a&gt;. Also see &lt;a href="/blog/photography/lee-wide-angle-hood/"&gt;Lee Wide Angle Hood&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hoods or lens shades help improve contrast by stopping …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Available to buy from &lt;a href="http://www.wexphotographic.com/buy-lee-standard-lens-hood/p1010398"&gt;WEX&lt;/a&gt;. Also see &lt;a href="/blog/photography/lee-wide-angle-hood/"&gt;Lee Wide Angle Hood&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hoods or lens shades help improve contrast by stopping out of frame light source entering the lens. LEE filters are square filters that can be used for effects or managing dynamic range, however as they mount in front of the lens with a holder you can no longer use your lenses standard hood. LEE have a standard, universal and wide angle hoods available.&lt;/p&gt;
&lt;p&gt;LEE do not provide many specs for the hood on their website. To help others decide
if this is right for them I have included measurements and pictures.&lt;/p&gt;
&lt;p&gt;The Standard is the smallest of the three hoods. 
It actually has a very clever rail system which allows it to be mounted in a slot. 
When mounted on to a lee adapter ring this sits further back out of the way.
All Lee products should have this and there would be no need for a tandem connector. &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Photography/LEE/morganp-20140405-Lee-_MG_7257.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Filter weigh 150g&lt;/p&gt;
&lt;h2&gt;Dimensions&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Width Height:
External: 13.1cm x 13.1cm
Internal: 11.1cm x 11.1cm

Depth:
Complete compressed: 3.5cm.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Min expansion&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;complete&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;4.6&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;
&lt;span class="n"&gt;hood&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mount&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;3.6&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;
&lt;span class="n"&gt;hood&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/images/Photography/LEE/morganp-20140405-Lee-_MG_7249.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Max Expansion&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;complete&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;15.0&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;
&lt;span class="n"&gt;hood&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mount&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;14.0&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;
&lt;span class="n"&gt;hood&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;13.3&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/images/Photography/LEE/morganp-20140405-Lee-_MG_7251.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This hood is too small for use under 28mm on a full-frame camera.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On a crop sensor it is still good at 16mm&lt;/p&gt;
&lt;p&gt;Vignetting examples:
&lt;img alt="" src="/images/Photography/LEE/morganp-20140405-Lee-IMG_0116.jpg"&gt;
Setup for following examples, Canon 6D, wide angle adapter, Lee holder 3 slots (2 for filters, 1 for hood) then universal hood at minimal expansion.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Photography/LEE/morganp-20140409--_MG_7416.jpg" title="16mm full-frame"&gt;
above 16mm full-frame with filter holder&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Photography/LEE/morganp-20140409--_MG_7417.jpg" title="20mm full-frame"&gt;
above 20mm full-frame with filter holder&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Photography/LEE/morganp-20140409--_MG_7418.jpg" title="24mm full-frame"&gt;
above 24mm full-frame with filter holder&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Photography/LEE/morganp-20140409--_MG_7419.jpg" title="28mm full-frame"&gt;
above 28mm full-frame with filter holder&lt;/p&gt;</content><category term="Photography"></category><category term="LEE"></category><category term="Filters"></category></entry><entry><title>"Licence Types and Short Identifiers"</title><link href="http://lizard-spock.co.uk/pelican_test/licence-types-and-short-identifiers.html" rel="alternate"></link><published>2014-05-05T20:17:43+01:00</published><updated>2014-05-05T20:17:43+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-05-05:/pelican_test/licence-types-and-short-identifiers.html</id><summary type="html">&lt;p&gt;Some time ago &lt;a href="http://guides.rubygems.org/specification-reference/"&gt;gemspec&lt;/a&gt; files for ruby gems added the ability to
specify the short identifier for the license type …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Some time ago &lt;a href="http://guides.rubygems.org/specification-reference/"&gt;gemspec&lt;/a&gt; files for ruby gems added the ability to
specify the short identifier for the license type.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;Gem&lt;/span&gt;::&lt;span class="nv"&gt;Specification&lt;/span&gt;.&lt;span class="nv"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt;.&lt;span class="nv"&gt;licenses&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;MIT&amp;#39;&lt;/span&gt;]
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The unofficial list of short identifiers is available from &lt;a href="https://spdx.org/licenses/"&gt;spdx&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category><category term="Ruby"></category><category term="Gem"></category><category term="Programming"></category></entry><entry><title>"Lightroom Load Canon 6D GPS"</title><link href="http://lizard-spock.co.uk/pelican_test/lightroom-load-canon-6d-gps.html" rel="alternate"></link><published>2014-04-14T19:01:06+01:00</published><updated>2014-04-14T19:01:06+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-04-14:/pelican_test/lightroom-load-canon-6d-gps.html</id><summary type="html">&lt;p&gt;Adobe Lightroom will only load GPX, Canon 6D only saves NMEA data.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.gpsbabel.org/"&gt;GPSBabel&lt;/a&gt; can be used to convert the &lt;code&gt;*.log …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Adobe Lightroom will only load GPX, Canon 6D only saves NMEA data.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.gpsbabel.org/"&gt;GPSBabel&lt;/a&gt; can be used to convert the &lt;code&gt;*.log&lt;/code&gt; from the camera to &lt;code&gt;*.gpx&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Download the software then load the log file for the input setting the type to &lt;code&gt;NMEA 0183 sentences&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Set the output file name and set the format to &lt;code&gt;GPX XML&lt;/code&gt;. Click OK to generate the GPX which can now be loaded into Lightroom.&lt;/p&gt;</content><category term="Photography"></category><category term="GPS"></category><category term="Lightroom"></category></entry><entry><title>"Craghoppers Pro Stretch"</title><link href="http://lizard-spock.co.uk/pelican_test/craghoppers-pro-stretch.html" rel="alternate"></link><published>2014-04-10T18:12:22+01:00</published><updated>2014-04-10T18:12:22+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-04-10:/pelican_test/craghoppers-pro-stretch.html</id><summary type="html">&lt;p&gt;Last year I got a pair of the pro stretch trousers for walking, they were pretty good for walking in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last year I got a pair of the pro stretch trousers for walking, they were pretty good for walking in so good I just went back to get another pair.&lt;/p&gt;
&lt;p&gt;There are however some changes to the current versions.&lt;/p&gt;
&lt;p&gt;The back of the waist band use to fully elasticated. Now only two small side
sections on the waistband are elasticated this massively reduced the range of
fit the trousers have. So much so they have introduced a larger size to
accommodate the change in fit. This does however bring the styling and
available sizes in-line with the Craghoppers staple Classic Kiwi.&lt;/p&gt;
&lt;p&gt;To note my new versions are a size larger, and they still have a small fit than the old ones.&lt;/p&gt;
&lt;p&gt;The feel of the new trousers is not as nice as the old ones. They have altered the fabric mix:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;OLD: 93% Polyamide 7% Elastane&lt;/code&gt;&lt;br&gt;
&lt;code&gt;NEW: 96% Polyamide 4% Elastane&lt;/code&gt;&lt;/p&gt;
&lt;!-- more --&gt;

&lt;p&gt;I guess the old ones were just to comfortable and stretchy :(&lt;/p&gt;
&lt;p&gt;The old style waist band:&lt;br&gt;
&lt;img alt="" src="/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7421.jpg" title="Old style wasit band"&gt;&lt;/p&gt;
&lt;p&gt;New style Waistband, minimal stretchiness :&lt;br&gt;
&lt;img alt="" src="/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7425.jpg"&gt;
&lt;img alt="" src="/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7426.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Old style thigh pocket, completely external: 
&lt;img alt="" src="/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7423.jpg" title="Old style thigh pocket, completely external"&gt;&lt;/p&gt;
&lt;p&gt;Inside view of pocket, not much to rub or cause irritation which is good for a close fitting trouser.
&lt;img alt="" src="/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7428.jpg"&gt;&lt;/p&gt;
&lt;p&gt;New style, thigh pocket zipper looks very sleek.
&lt;img alt="" src="/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7427.jpg"&gt;&lt;/p&gt;
&lt;p&gt;New style, internal thigh pocket cleverly designed for maximum irritation while walking.
&lt;img alt="" src="/images/Outdoor/morganp-20140410-CraghopperProStretch-_MG_7429.jpg"&gt;&lt;/p&gt;</content><category term="Outdoor"></category><category term="Craghoppers"></category><category term="Review"></category></entry><entry><title>"Ruby Methods and Splat"</title><link href="http://lizard-spock.co.uk/pelican_test/ruby-methods-and-splat.html" rel="alternate"></link><published>2014-04-09T19:47:47+01:00</published><updated>2014-04-09T19:47:47+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-04-09:/pelican_test/ruby-methods-and-splat.html</id><summary type="html">&lt;p&gt;Ruby methods can set default values for optional arguments:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;def commit(path=Dir.pwd)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To take an optional number of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ruby methods can set default values for optional arguments:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;def commit(path=Dir.pwd)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To take an optional number of arguments a splat can be used:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;def amethod( *arg1 )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The Problem is now to set defaults or require a set number of arguments. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Splat arguments can not be defaulted.&lt;/li&gt;
&lt;li&gt;The splat can accept zero arguments.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following might be what you would expect for a default in a splat, but this conflicts with its abilliy to accept 0 arguments.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;def commit(*path=[Dir.pwd]) ##THIS DOES NOT WORK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Splats can follow other arguments. To require at least one argument:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;def add(files, *files_splat)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No arguments required but the first has a default:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;def commit(path=Dir.pwd, *path_splat)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These also work as expected in Thor for parsing command line options. I have used them in my &lt;a href="https://github.com/morganp/dssx"&gt;dssx&lt;/a&gt; gem.&lt;/p&gt;
&lt;p&gt;In thor I also add this to the start of my methods to combine &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;path_splat&lt;/code&gt; which are strings:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path_list = path + &amp;#39; &amp;#39; + path_splat * &amp;#39; &amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="Programming"></category><category term="Ruby"></category></entry><entry><title>"Thor Adding --verbose"</title><link href="http://lizard-spock.co.uk/pelican_test/thor-adding-verbose.html" rel="alternate"></link><published>2014-04-09T19:26:44+01:00</published><updated>2014-04-09T19:26:44+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-04-09:/pelican_test/thor-adding-verbose.html</id><summary type="html">&lt;p&gt;With a command line Ruby application using Thor for the option parsing I want to be able to run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;thor_app …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;With a command line Ruby application using Thor for the option parsing I want to be able to run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;thor_app&lt;span class="w"&gt; &lt;/span&gt;--version
&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;thor_app&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Create a boolean class option, which does not belong to a task, that can be referenced by other tasks. The often used example for a class option is -v verbose, as all tasks can use this to determine how noisy they should be.&lt;/p&gt;
&lt;p&gt;Then create a 'version' task and make it the default task, so when no task is defined the version task is ran and can react to the --version flag (class option).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;CLI&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Thor&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Thor&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nx"&gt;Actions&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;class_option&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;desc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Show thor_app version&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;puts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;thor_app version #{find_version}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;default_task&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;no_tasks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;do&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;find_version&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="err"&gt;##&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Method&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;can&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;replaced&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;look&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;up&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;VERSION&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="m m-Double"&gt;1.0.0&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;
&lt;span class="nx"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is based on &lt;a href="http://stackoverflow.com/q/22809972/97073"&gt;my SO Question&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category><category term="Programming"></category><category term="Ruby"></category><category term="Command Line"></category></entry><entry><title>"Creating Lightroom Metadata Views"</title><link href="http://lizard-spock.co.uk/pelican_test/creating-lightroom-metadata-views.html" rel="alternate"></link><published>2014-04-09T01:28:27+01:00</published><updated>2014-04-09T01:28:27+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-04-09:/pelican_test/creating-lightroom-metadata-views.html</id><summary type="html">&lt;p&gt;Lightroom plugins for metadata views are called metadata tag sets and only require 2 text files.&lt;/p&gt;
&lt;p&gt;create a folder called …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Lightroom plugins for metadata views are called metadata tag sets and only require 2 text files.&lt;/p&gt;
&lt;p&gt;create a folder called &lt;code&gt;something.lrdevplugin&lt;/code&gt; once you are happy with it it can be renamed &lt;code&gt;something.lrplugin&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Create a file called Info.lua and Tagset.lua&lt;/p&gt;
&lt;p&gt;Info.lua:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;return {&lt;/span&gt;
&lt;span class="n"&gt;  LrSdkVersion = 5.0,&lt;/span&gt;
&lt;span class="n"&gt;  LrSdkMinimumVersion = 5.0,&lt;/span&gt;
&lt;span class="n"&gt;  LrToolkitIdentifier = ’sample.metadata&amp;#39;,&lt;/span&gt;
&lt;span class="n"&gt;  LrPluginName = LOC &amp;quot;$$$/CustomMetadata/PluginName=Example View&amp;quot;,&lt;/span&gt;
&lt;span class="n"&gt;  LrMetadataTagsetFactory = ‘Tagset.lua&amp;#39;,&lt;/span&gt;
&lt;span class="n"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tagset.lua&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;return {
  title = LOC &amp;quot;$$$/SampleTagset/Title=Example Meta&amp;quot;,
  id = ‘Tagset&amp;#39;,
  items = {
    {&amp;#39;com.adobe.jobIdentifier&amp;#39;, height_in_lines = 1},
    &amp;#39;com.adobe.separator&amp;#39;,
    {&amp;#39;com.adobe.title&amp;#39;, height_in_lines = 2},
    &amp;#39;com.adobe.separator&amp;#39;,
    {&amp;#39;com.adobe.caption&amp;#39;, height_in_lines = 6},
  },
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The full list of options can be seen from page 63 of the &lt;a href="http://wwwimages.adobe.com/www.adobe.com/content/dam/Adobe/en/devnet/photoshoplightroom/pdfs/lr5/lightroom-sdk-guide.pdf"&gt;lightroom sdk guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My &lt;a href="https://github.com/morganp/CopyrightMetadataTagset.lrdevplugin"&gt;Copyright view&lt;/a&gt; and &lt;a href="https://github.com/morganp/CopyrightMetadataTagset.lrdevplugin"&gt;JobID view&lt;/a&gt;.&lt;/p&gt;</content><category term="Photography"></category><category term="Lightroom"></category><category term="Programming"></category></entry><entry><title>"iTerm Exit Fullscreen"</title><link href="http://lizard-spock.co.uk/pelican_test/iterm-exit-fullscreen.html" rel="alternate"></link><published>2014-04-08T19:27:00+01:00</published><updated>2014-04-08T19:27:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-04-08:/pelican_test/iterm-exit-fullscreen.html</id><content type="html">&lt;p&gt;&lt;code&gt;⌘-Enter&lt;/code&gt; toggles fullscreen in &lt;a href="http://www.iterm2.com/"&gt;iTerm&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category><category term="OS X"></category><category term="iTerm"></category><category term="Mavericks"></category></entry><entry><title>"Verilog importing envvar"</title><link href="http://lizard-spock.co.uk/pelican_test/verilog-importing-envvar.html" rel="alternate"></link><published>2014-04-03T18:22:00+01:00</published><updated>2014-04-03T18:22:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-04-03:/pelican_test/verilog-importing-envvar.html</id><summary type="html">&lt;p&gt;Based on a &lt;a href="http://stackoverflow.com/a/15103561/97073"&gt;Stackoverflow answer&lt;/a&gt;, to import environment variables into Verilog you can use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;DPI-C&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Based on a &lt;a href="http://stackoverflow.com/a/15103561/97073"&gt;Stackoverflow answer&lt;/a&gt;, to import environment variables into Verilog you can use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;DPI-C&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;env_name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;env = &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;HOME&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/FileName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;endmodule&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Verilog"></category><category term="Programming"></category></entry><entry><title>"Fixing Mangled Octopress Tags"</title><link href="http://lizard-spock.co.uk/pelican_test/fixing-mangled-octopress-tags.html" rel="alternate"></link><published>2014-04-01T20:59:40+01:00</published><updated>2014-04-01T20:59:40+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-04-01:/pelican_test/fixing-mangled-octopress-tags.html</id><summary type="html">&lt;p&gt;When creating my blog I have been inconsistent with the tag &lt;code&gt;command line&lt;/code&gt;, &lt;code&gt;Command line&lt;/code&gt; and
&lt;code&gt;Command Line&lt;/code&gt; the case …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When creating my blog I have been inconsistent with the tag &lt;code&gt;command line&lt;/code&gt;, &lt;code&gt;Command line&lt;/code&gt; and
&lt;code&gt;Command Line&lt;/code&gt; the case in-sensitvities are not picked up in Octopress generation. To some
extent my &lt;a href=""&gt;Downcase plugin&lt;/a&gt; hides these differences. The tags page only lists those with full
downcase, but handles all other mixed case tags.&lt;/p&gt;
&lt;p&gt;This has lead to some posts dropping off the tag listing, which are just not accessible this way.&lt;/p&gt;
&lt;p&gt;The easy fix is to standardise my use of the tag.&lt;/p&gt;
&lt;p&gt;First investigate: List posts containing the downcased version:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grep -R &amp;#39;\- command line&amp;#39; *
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Correct all :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;_posts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;print0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xargs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="err"&gt;{}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s/\- [Cc]ommand [Ll]ine/\- Command Line/g&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;find&lt;/code&gt; outputs all files in folder ‘./‘ Actually had some trouble rerunning this find command so simplified it to :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;_posts&lt;/span&gt;&lt;span class="cm"&gt;/*.markdown | xargs -I{} sed -i &amp;#39;&amp;#39; &amp;#39;s/\- [Cc]ommand [Ll]ine/\- Command Line/g&amp;#39; {}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;xargs&lt;/strong&gt; option &lt;code&gt;i{}&lt;/code&gt; takes the input argument and repeats it in the following command where the
&lt;code&gt;{}&lt;/code&gt; are placed. &lt;code&gt;find&lt;/code&gt; has a built in &lt;code&gt;-exec&lt;/code&gt; option but using xargs allows the first &lt;code&gt;find&lt;/code&gt;
command to be replaced with &lt;code&gt;grep&lt;/code&gt; or &lt;code&gt;ls&lt;/code&gt; if required.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sed&lt;/strong&gt; options &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;g&lt;/code&gt; Replace all the instances&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i ‘’&lt;/code&gt; Edits inplace without appending a new file extension.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;On a Mavericks the default see does not support case insensitive search,
therefore I have enclosed the first letter of each word with options for lower and upper case.&lt;/p&gt;
&lt;p&gt;After performing the updates the tag text is updated to &lt;code&gt;Command Line&lt;/code&gt; and the url is
&lt;a href="/tag/command-line/"&gt;&lt;code&gt;tag/command-line/&lt;/code&gt;&lt;/a&gt;, which lists all of the tagged posts. &lt;/p&gt;</content><category term="Tech"></category><category term="Octopress"></category><category term="Command Line"></category></entry><entry><title>"Thor Variable Arguments"</title><link href="http://lizard-spock.co.uk/pelican_test/thor-variable-arguments.html" rel="alternate"></link><published>2014-04-01T19:39:19+01:00</published><updated>2014-04-01T19:39:19+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-04-01:/pelican_test/thor-variable-arguments.html</id><summary type="html">&lt;p&gt;&lt;a href="http://whatisthor.com/"&gt;Thor&lt;/a&gt; is a Ruby Gem, which allows you to build command line applications which accept commands, in the same way …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://whatisthor.com/"&gt;Thor&lt;/a&gt; is a Ruby Gem, which allows you to build command line applications which accept commands, in the same way &lt;code&gt;git&lt;/code&gt; accepts &lt;code&gt;add&lt;/code&gt; as a command.&lt;/p&gt;
&lt;p&gt;The Helloworld example :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;thor&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;MyCLI&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Thor&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;desc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hello NAME&amp;quot;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;say hello to NAME&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;hello&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;puts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello #{name}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="nv"&gt;MyCLI&lt;/span&gt;.&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ARGV&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The help and single input.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;ruby&lt;span class="w"&gt; &lt;/span&gt;thor_test.rb&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;hello
&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;Usage:
&amp;gt;&lt;span class="w"&gt;  &lt;/span&gt;thor_test.rb&lt;span class="w"&gt; &lt;/span&gt;hello&lt;span class="w"&gt; &lt;/span&gt;NAME
&amp;gt;
&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;say&lt;span class="w"&gt; &lt;/span&gt;hello&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;NAME


$&lt;span class="w"&gt; &lt;/span&gt;ruby&lt;span class="w"&gt; &lt;/span&gt;thor_test.rb&lt;span class="w"&gt; &lt;/span&gt;Hello&lt;span class="w"&gt; &lt;/span&gt;a
&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;Hello&lt;span class="w"&gt; &lt;/span&gt;a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now with multiple, inputs: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;ruby&lt;span class="w"&gt; &lt;/span&gt;thor_test.rb&lt;span class="w"&gt; &lt;/span&gt;Hello&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;b
&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;thor_test.rb&lt;span class="w"&gt; &lt;/span&gt;hello&lt;span class="w"&gt; &lt;/span&gt;requires&lt;span class="w"&gt; &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;least&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;argument:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;thor_test.rb hello NAME”.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Not really what you want if you were building a command like &lt;code&gt;git add&lt;/code&gt; when you
would want all following arguments as inputs.&lt;/p&gt;
&lt;p&gt;To accept a variable number of arguments is not Thor specific but a standard 
ruby idiom. A splat in front of your variable ie &lt;code&gt;*name&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;require &amp;quot;thor&amp;quot;

class MyCLI &amp;lt; Thor
  desc &amp;quot;hello NAME&amp;quot;, &amp;quot;say hello to NAME&amp;quot;
  def hello(*name)
    puts &amp;quot;Hello #{name * “ &amp;quot;}&amp;quot;
  end
end
MyCLI.start(ARGV)

$ ruby thor_test.rb Hello a b
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;Hello a b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="Ruby"></category><category term="Command Line"></category></entry><entry><title>"Ruby Print Array"</title><link href="http://lizard-spock.co.uk/pelican_test/ruby-print-array.html" rel="alternate"></link><published>2014-04-01T18:36:00+01:00</published><updated>2014-04-01T18:36:00+01:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-04-01:/pelican_test/ruby-print-array.html</id><summary type="html">&lt;p&gt;&lt;code&gt;puts&lt;/code&gt; and &lt;code&gt;to_s&lt;/code&gt; could be better:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a = [1, 2, 3]
puts a
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;2&lt;/span&gt;
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;3&lt;/span&gt;

puts a.to_s
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;[1, 2 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;puts&lt;/code&gt; and &lt;code&gt;to_s&lt;/code&gt; could be better:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a = [1, 2, 3]
puts a
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;2&lt;/span&gt;
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;3&lt;/span&gt;

puts a.to_s
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;[1, 2, 3]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Nicely print an array&lt;/h2&gt;
&lt;p&gt;Multiply it out with spaces:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a = [1, 2, 3]
puts a * &amp;quot; &amp;quot;
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;1 2 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="Ruby"></category></entry><entry><title>"Screen Scrollback"</title><link href="http://lizard-spock.co.uk/pelican_test/screen-scrollback.html" rel="alternate"></link><published>2014-03-25T20:57:28+00:00</published><updated>2014-03-25T20:57:28+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-25:/pelican_test/screen-scrollback.html</id><summary type="html">&lt;p&gt;Enter copy mode&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ctrl-a [
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Use cursors of vim motions to move to relevant area.&lt;/p&gt;
&lt;p&gt;Space to start selection, space again …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Enter copy mode&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ctrl-a [
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Use cursors of vim motions to move to relevant area.&lt;/p&gt;
&lt;p&gt;Space to start selection, space again to end selection and copy to screen copy-buffer&lt;/p&gt;
&lt;p&gt;Move to virtual screen terminal where you want to paste then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ctrl-a ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To paste to file enter &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;cat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;paste&lt;/span&gt;.&lt;span class="nv"&gt;file&lt;/span&gt;
#&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Then&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;press&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ctrl&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://commandliners.com/2009/12/screen-working-with-the-scrollback-buffer/"&gt;More notes on screen scrollback history&lt;/a&gt;&lt;/p&gt;</content><category term="Tech"></category><category term="Command Line"></category><category term="Screen"></category></entry><entry><title>"Matlab: leading 0's"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-leading-0s.html" rel="alternate"></link><published>2014-03-25T20:52:35+00:00</published><updated>2014-03-25T20:52:35+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-25:/pelican_test/matlab-leading-0s.html</id><summary type="html">&lt;p&gt;For adding leading zeros to a number the following can be used for 4 decimal places with integer input:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;dat …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;For adding leading zeros to a number the following can be used for 4 decimal places with integer input:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;dat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;sprintf&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;%4.4d&amp;#39;&lt;/span&gt;],&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;dat&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To make this programmable the following can be used:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dat       = 1;
min_width = 4;
sprintf([&amp;#39;%&amp;#39;,num2str(min_width),&amp;#39;.&amp;#39;, num2str(min_width),&amp;#39;d&amp;#39;], 1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For string inputs you need:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dat       = &amp;#39;1&amp;#39;
min_width = 4;
sprintf([&amp;#39;%0&amp;#39;,num2str(6),&amp;#39;s&amp;#39;], dat)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Matlab"></category><category term="Programming"></category></entry><entry><title>"Mavericks Disable Mail Sound"</title><link href="http://lizard-spock.co.uk/pelican_test/mavericks-disable-mail-sound.html" rel="alternate"></link><published>2014-03-18T17:41:49+00:00</published><updated>2014-03-18T17:41:49+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-18:/pelican_test/mavericks-disable-mail-sound.html</id><summary type="html">&lt;p&gt;Since upgrading to Mavericks I get a sound whenever I get mail. I find this very annoying so first port …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Since upgrading to Mavericks I get a sound whenever I get mail. I find this very annoying so first port of call is to disable 'Play user interface sound effects' from  System Preferences -&amp;gt; Sound.&lt;/p&gt;
&lt;p&gt;This did not work, I found a separate option in mail for playing a sound on incoming mail, disabled that and other actions if you want.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Tech/Disable_mail_sound.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NB: On checking things to write this I found that 'Play user interface sound effects' had been enabled again.&lt;/em&gt;&lt;/p&gt;</content><category term="Tech"></category><category term="OS X"></category><category term="Mavericks"></category></entry><entry><title>"Matlab Wrapper Scripts"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-wrapper-scripts.html" rel="alternate"></link><published>2014-03-17T19:48:57+00:00</published><updated>2014-03-17T19:48:57+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-17:/pelican_test/matlab-wrapper-scripts.html</id><summary type="html">&lt;p&gt;To wrap a function with variable input arguments and pass them all on to the wrapped function.
Based on a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;To wrap a function with variable input arguments and pass them all on to the wrapped function.
Based on a &lt;a href="http://stackoverflow.com/questions/4895556/how-to-wrap-a-function-using-varargin-and-varargout"&gt;StackOverflow answer&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;varargout&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; varargin &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;varargout&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;nargout&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;someFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;varargin&lt;/span&gt;&lt;span class="p"&gt;{:}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Used in the &lt;a href="https://github.com/Matlab-Toolbox/printf"&gt;printf toolbox&lt;/a&gt;: where we wrap fprint to print directly to stdout.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; varargin &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;fprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;varargin&lt;/span&gt;&lt;span class="p"&gt;{:});&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Matlab"></category><category term="Programming"></category></entry><entry><title>"Matlab sort_by"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-sort_by.html" rel="alternate"></link><published>2014-03-17T18:55:11+00:00</published><updated>2014-03-17T18:55:11+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-17:/pelican_test/matlab-sort_by.html</id><summary type="html">&lt;p&gt;In ruby we can perform schwartzian transforms easily with the sort_by method. This allows sorting enumerators by any property.&lt;/p&gt;
&lt;p&gt;For …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In ruby we can perform schwartzian transforms easily with the sort_by method. This allows sorting enumerators by any property.&lt;/p&gt;
&lt;p&gt;For example to do a non case sensitive sort:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;some_array.sort_by { |x| x.downcase }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://blogs.mathworks.com/pick/2010/09/17/sorting-structure-arrays-based-on-fields/"&gt;Based on this Mathworks blog&lt;/a&gt;, I have ported the &lt;a href="http://www.mathworks.com/matlabcentral/fileexchange/28573-nested-sort-of-structure-arrays"&gt;Matlab central code&lt;/a&gt; to a &lt;a href="https://github.com/Matlab-Toolbox/nested_sort"&gt;Toolbox on Github&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;After Downloading the toolbox and adding the functions folder to your path.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;addpath(&amp;#39;../lib/nested_sort/function/&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Basic usage is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;struct&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;num2cell&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;4&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;5,2,3,1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;B&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;sortStruct&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;A&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;B is A sorted by 'value'.&lt;/p&gt;</content><category term="Engineering"></category><category term="Matlab"></category></entry><entry><title>"Raised Bed, Update"</title><link href="http://lizard-spock.co.uk/pelican_test/raised-bed-update.html" rel="alternate"></link><published>2014-03-16T21:36:59+00:00</published><updated>2014-03-16T21:36:59+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-16:/pelican_test/raised-bed-update.html</id><summary type="html">&lt;p&gt;Update to the raised beds. Delivery of top soil:
&lt;img alt="" src="/images/Gardening/RaisedBed2/morganp-20140226-Garden-_MG_6875.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Raised bed lined with weed barrier and then 20mm Gravel. Filled …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Update to the raised beds. Delivery of top soil:
&lt;img alt="" src="/images/Gardening/RaisedBed2/morganp-20140226-Garden-_MG_6875.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Raised bed lined with weed barrier and then 20mm Gravel. Filled with Top soil, Compost and Vermiculite mix.
My version of &lt;a href="http://www.mysquarefootgarden.net/mels-mix/"&gt;Mels Mix&lt;/a&gt;.&lt;/p&gt;
&lt;!-- more --&gt;

&lt;p&gt;&lt;img alt="" src="/images/Gardening/RaisedBed2/morganp-20140226-Garden-_MG_6877.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The first bed prepared. With make shift cat deterrent.
&lt;img alt="" src="/images/Gardening/RaisedBed2/morganp-20140226-Garden-_MG_6881.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The two raised bed in place for this (2014) year. The second raised bed has a deeper section for Carrots.
&lt;img alt="" src="/images/Gardening/RaisedBed2/morganp-20140316-Garden-_MG_7028.jpg"&gt;&lt;/p&gt;</content><category term="Home"></category><category term="DIY"></category><category term="Kitchen Garden"></category></entry><entry><title>"Tool Acquisition"</title><link href="http://lizard-spock.co.uk/pelican_test/tool-acquisition.html" rel="alternate"></link><published>2014-03-16T19:37:57+00:00</published><updated>2014-03-16T19:37:57+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-16:/pelican_test/tool-acquisition.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="/images/Gardening/morganp-20140316-Garden-_MG_7012.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Just after Christmas I got a Joseph Bently digging spade (larger than the border spade). Bought from &lt;a href="http://www.dunbargardencentre.co.uk/"&gt;Dunbar Garden Center …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="/images/Gardening/morganp-20140316-Garden-_MG_7012.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Just after Christmas I got a Joseph Bently digging spade (larger than the border spade). Bought from &lt;a href="http://www.dunbargardencentre.co.uk/"&gt;Dunbar Garden Center&lt;/a&gt; for £22 as I had a £5 Off voucher for spending over £50 during December. Actually had 2 vouchers one was used for the &lt;a href="/blog/garden/birdbox/"&gt;bird boxes&lt;/a&gt;.&lt;/p&gt;
&lt;!-- more --&gt;

&lt;p&gt;&lt;img alt="" src="/images/Gardening/morganp-20140209-Spade-IMG_6737.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Used for preparing ground for the raised beds.&lt;/p&gt;
&lt;p&gt;The latest acquisition was a Joseph Bently Edging knife. &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Gardening/morganp-20140316-Garden-_MG_7008.jpg"&gt;
Really should have got this before digging up the turf to put the raised beds in.
This should result in much cleaner edges when removing turf.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Gardening/morganp-20140316-Garden-_MG_7016.jpg"&gt;&lt;/p&gt;</content><category term="Home"></category><category term="Tools"></category><category term="Joseph Bently"></category><category term="Garden"></category></entry><entry><title>"Propagator trays"</title><link href="http://lizard-spock.co.uk/pelican_test/propagator-trays.html" rel="alternate"></link><published>2014-03-16T19:23:48+00:00</published><updated>2014-03-16T19:23:48+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-16:/pelican_test/propagator-trays.html</id><summary type="html">&lt;p&gt;Sunday trip to &lt;a href="http://www.merryhatton.co.uk/"&gt;Marryhatton&lt;/a&gt;. Getting serious about propagation now, got these seed trays to move the seedlings to after they …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sunday trip to &lt;a href="http://www.merryhatton.co.uk/"&gt;Marryhatton&lt;/a&gt;. Getting serious about propagation now, got these seed trays to move the seedlings to after they have germinated in the heated propagator.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Gardening/morganp-20140316-Garden-_MG_6991.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Saw (&amp;amp; bought) this reed 5m by 2m screen on sale for £12.99!&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Gardening/morganp-20140316-Garden-_MG_7002.jpg"&gt;&lt;/p&gt;</content><category term="Home"></category><category term="Propagator"></category><category term="Marryhatton"></category><category term="Garden"></category></entry><entry><title>"F-Stop Loka Hydration"</title><link href="http://lizard-spock.co.uk/pelican_test/f-stop-loka-hydration.html" rel="alternate"></link><published>2014-03-16T18:13:55+00:00</published><updated>2014-03-16T18:13:55+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-16:/pelican_test/f-stop-loka-hydration.html</id><summary type="html">&lt;p&gt;Not a review, just noting the default position of the velcro hydration loop, before I remove it.
Left shoulder, under …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Not a review, just noting the default position of the velcro hydration loop, before I remove it.
Left shoulder, under chest harness.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Photography/Loka/morganp-20140315-Loka-IMG_6970.jpg"&gt;
&lt;img alt="" src="/images/Photography/Loka/morganp-20140315-Loka-IMG_6976.jpg"&gt;&lt;/p&gt;</content><category term="Photography"></category><category term="fstop"></category><category term="Loka"></category></entry><entry><title>"Ruby iterate over lines in a string"</title><link href="http://lizard-spock.co.uk/pelican_test/ruby-iterate-over-lines-in-a-string.html" rel="alternate"></link><published>2014-03-13T21:03:54+00:00</published><updated>2014-03-13T21:03:54+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-13:/pelican_test/ruby-iterate-over-lines-in-a-string.html</id><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;str.each_line do |line|
  #do something with line
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://stackoverflow.com/a/601892/97073"&gt;Source&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category><category term="Ruby"></category><category term="Programming"></category></entry><entry><title>"Macbook keyboard light not working"</title><link href="http://lizard-spock.co.uk/pelican_test/macbook-keyboard-light-not-working.html" rel="alternate"></link><published>2014-03-13T20:00:47+00:00</published><updated>2014-03-13T20:00:47+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-13:/pelican_test/macbook-keyboard-light-not-working.html</id><content type="html">&lt;p&gt;Checkout : &lt;a href="http://support.apple.com/kb/HT4882"&gt;Apple support&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Disable 'Adjust keyboard brightness in low light'.&lt;br&gt;
&lt;img alt="" src="/images/Tech/Keyboard_low_light.png"&gt;&lt;/p&gt;</content><category term="Tech"></category><category term="OS X"></category><category term="Mavericks"></category><category term="Macbook"></category></entry><entry><title>"Git tag and push to Github"</title><link href="http://lizard-spock.co.uk/pelican_test/git-tag-and-push-to-github.html" rel="alternate"></link><published>2014-03-13T19:16:57+00:00</published><updated>2014-03-13T19:16:57+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-13:/pelican_test/git-tag-and-push-to-github.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git tag -a 0.0.1 -m &amp;quot;Tag comment&amp;quot;
git push --tags
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Note: The use of &lt;a href="http://semver.org/"&gt;major.minor.patch Semantic …&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git tag -a 0.0.1 -m &amp;quot;Tag comment&amp;quot;
git push --tags
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Note: The use of &lt;a href="http://semver.org/"&gt;major.minor.patch Semantic Versioning&lt;/a&gt; is a really good idea.&lt;/em&gt;&lt;/p&gt;</content><category term="Tech"></category><category term="Git"></category></entry><entry><title>"Beyond the LSB"</title><link href="http://lizard-spock.co.uk/pelican_test/beyond-the-lsb.html" rel="alternate"></link><published>2014-03-13T19:07:42+00:00</published><updated>2014-03-13T19:07:42+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-13:/pelican_test/beyond-the-lsb.html</id><summary type="html">&lt;p&gt;If we truncate a number, that is to throw away the LSBs (least significant bits) we loose resolution.&lt;/p&gt;
&lt;p&gt;A 4 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If we truncate a number, that is to throw away the LSBs (least significant bits) we loose resolution.&lt;/p&gt;
&lt;p&gt;A 4 bit number truncated to 2 bits: &lt;em&gt;numbers shown in binary (Base2).&lt;/em&gt;   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;0100&lt;/span&gt;
&lt;span class="mf"&gt;0101&lt;/span&gt;
&lt;span class="mf"&gt;0110&lt;/span&gt;
&lt;span class="mf"&gt;0111&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Would all become 01.&lt;/p&gt;
&lt;h1&gt;Introducing Dither&lt;/h1&gt;
&lt;p&gt;Effective dithering increase the accuracy beyond the LSB of the truncated values. 
Consider a small fractional value rounded to an integer. Starting with 0.5 with 1 bit random dither:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Input  Dither Sum &amp;amp; truncate
00.1   0.1    01
00.1   0.0    00
00.1   0.1    01
00.1   0.0    00
Average over 4 samples is 0.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the value is below 0.5 this dither scheme will not work, as it would never
round to a full integer.&lt;/p&gt;
&lt;p&gt;So we increase the dither to 2 bits. Inputting a constant 0.25, Dither cycling
through all possible values&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Input  Dither Sum &amp;amp; truncate
00.01  0.00   00
00.01  0.01   00
00.01  0.10   00
00.01  0.11   01
Average of 4 Samples 0.25
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the above example we have increased the resolution of the time averaged value
by 2 bits.&lt;/p&gt;
&lt;p&gt;For every doubling of the frequency we gain an effective LSB if dithered correctly.
Adding more bits than &lt;code&gt;log2(oversampling rate)&lt;/code&gt; of dithering will not gain accuracy.
Although it may help breakup tonal behaviour of a system.&lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Apply dither to the bits to be truncated. Apply enough bits of dither so it is
possible for the LSB of the required resolution to effect the truncated value.&lt;/p&gt;
&lt;p&gt;The increase in resolution is limited to &lt;code&gt;log2(oversampling rate)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Further Reading:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ece.rochester.edu/courses/ECE472/resources/Papers/Lipshitz_1992.pdf"&gt;Quanatization and Dither: A Theoretical Survey. LIPSHITZ, WANNAMAKER and VANDERKOOY&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://drewdaniels.com/dither.pdf"&gt;Resolution Below the Least Significant Bit in Digital Systems with Dither. VANDERKOOY and LIPSHITZ&lt;/a&gt;&lt;/p&gt;</content><category term="Engineering"></category><category term="LFSR"></category><category term="Random"></category></entry><entry><title>"Spicy Chocolate Cake"</title><link href="http://lizard-spock.co.uk/pelican_test/spicy-chocolate-cake.html" rel="alternate"></link><published>2014-03-08T09:12:04+00:00</published><updated>2014-03-08T09:12:04+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-08:/pelican_test/spicy-chocolate-cake.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5189.jpg"&gt;&lt;/p&gt;
&lt;!-- more --&gt;

&lt;h2&gt;Ingredients&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5125.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;That is Ginger not stem ginger pictured&lt;/strong&gt;, it works, but stem ginger is much better.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;Dark&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;choclate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Shavings&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;for …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5189.jpg"&gt;&lt;/p&gt;
&lt;!-- more --&gt;

&lt;h2&gt;Ingredients&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5125.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;That is Ginger not stem ginger pictured&lt;/strong&gt;, it works, but stem ginger is much better.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;Dark&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;choclate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Shavings&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;topping&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ml&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;Espresso&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ball&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;Stem&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ginger&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;large&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Eggs&lt;/span&gt;
&lt;span class="mi"&gt;175&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="k"&gt;Self&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Raising&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Flour&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nx"&gt;Golden&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Caster&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Sugar&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nx"&gt;Cocoa&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Powder&lt;/span&gt;
&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ml&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;Butter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;milk&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;tsp&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nx"&gt;Coffee&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Essence&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;tsp&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nx"&gt;Baking&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Powder&lt;/span&gt;
&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nx"&gt;Unsalted&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Butter&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nx"&gt;Unsalted&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Butter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;greasing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nx"&gt;Icing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Sugar&lt;/span&gt;
&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ml&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;Vegatble&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Oil&lt;/span&gt;

&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nx"&gt;Unsalted&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Butter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pre-heat oven to 180 Degrees. Grease with unsalted butter 2 20cm/8inch cake tins, line base with grease proof paper.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;250&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="kr"&gt;Go&lt;/span&gt;&lt;span class="n"&gt;lden&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Caster&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Sugar&lt;/span&gt;
&lt;span class="mf"&gt;120&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ml&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Vegatble&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Oil&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;large&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Eggs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Whisk golden caster sugar, vegetable Oil and eggs. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;150&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ml&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Butter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;milk&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;25&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ml&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Espresso&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once pale and fluffy add butter milk and espresso, whisk again.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;175&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;Self&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Raising&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Flour&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;60&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;Cocoa&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Powder&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Slowly add self raising flour and cocoa powder, mixing and folding until well combined.&lt;/p&gt;
&lt;p&gt;Add equally into the prepared cake tins, Bake for around 20 minutes, until golden and risen.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5157-Edit.jpg"&gt;
&lt;img alt="" src="/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5180.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Leave cakes to cool in tins for about 10 minutes than transfer to rack to cool completely.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  1 ball  Stem Ginger
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finely chop stem ginger&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;120&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;Unsalted&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Butter&lt;/span&gt;
&lt;span class="mf"&gt;260&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;Icing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Sugar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5132.jpg"&gt;
&lt;img alt="" src="/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5148.jpg"&gt;
&lt;img alt="" src="/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5150.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Add butter to large bowl and whisk until smooth (about 1 minute). &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5174.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Gradually add the icing sugar, whisk until light an fluffy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  2 tsp   Coffee Essence
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Added chopped stem ginger and coffee essence to bowl and whisk until mixed (30 seconds).&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5183.jpg"&gt;
&lt;img alt="" src="/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5185.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Place one cake on plate, then spread with two thirds of the icing. Add second layer of
cake and cover with remaining icing. Top with cocoa powder or dark chocolate shavings.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Cooking/SpicyChocolateCake/morganp-20131123-SpicyChoclateCake-IMG_5189.jpg"&gt;&lt;/p&gt;</content><category term="Cooking"></category><category term="Recipe"></category><category term="Cake"></category><category term="Dessert"></category></entry><entry><title>"Matlab Function Outputs"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-function-outputs.html" rel="alternate"></link><published>2014-03-08T08:02:27+00:00</published><updated>2014-03-08T08:02:27+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-08:/pelican_test/matlab-function-outputs.html</id><summary type="html">&lt;p&gt;Handling functions with extraneous leading outputs. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="err"&gt; [&lt;/span&gt;&lt;span class="nf"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dummy_function&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;endfunction&lt;/span&gt;


&lt;span class="s"&gt;[a,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;b]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dummy_function …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Handling functions with extraneous leading outputs. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="err"&gt; [&lt;/span&gt;&lt;span class="nf"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dummy_function&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;endfunction&lt;/span&gt;


&lt;span class="s"&gt;[a,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;b]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dummy_function&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If &lt;code&gt;a&lt;/code&gt; is not required it can be replaced with a tilda &lt;code&gt;~&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[~, b] = dummy_function

b =
    20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Engineering"></category><category term="Matlab"></category><category term="Programming"></category></entry><entry><title>"Matlab Shuffle Array"</title><link href="http://lizard-spock.co.uk/pelican_test/matlab-shuffle-array.html" rel="alternate"></link><published>2014-03-06T20:42:57+00:00</published><updated>2014-03-06T20:42:57+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-06:/pelican_test/matlab-shuffle-array.html</id><summary type="html">&lt;p&gt;To shuffle a:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a(randperm(length(a)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a = [10 2 5 20];
a = a(randperm(length(a)))

a =

 5 …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;To shuffle a:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a(randperm(length(a)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a = [10 2 5 20];
a = a(randperm(length(a)))

a =

 5    10     2    20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://www.mathworks.co.uk/matlabcentral/newsreader/view_thread/239478"&gt;Source&lt;/a&gt;.&lt;/p&gt;</content><category term="Engineering"></category><category term="Matlab"></category></entry><entry><title>"Bash String Manipulation"</title><link href="http://lizard-spock.co.uk/pelican_test/bash-string-manipulation.html" rel="alternate"></link><published>2014-03-05T21:32:14+00:00</published><updated>2014-03-05T21:32:14+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-05:/pelican_test/bash-string-manipulation.html</id><summary type="html">&lt;p&gt;Removal of substring:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;string=&amp;quot;test&lt;span class="w"&gt; &lt;/span&gt;string&amp;quot;
echo&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$string&lt;/span&gt;

remove=&amp;quot;test&amp;quot;
short_string=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="c1"&gt;#$remove&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
echo&lt;span class="w"&gt; &lt;/span&gt;short_string
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that inside the &lt;code&gt;${}&lt;/code&gt; &lt;code&gt;string …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Removal of substring:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;string=&amp;quot;test&lt;span class="w"&gt; &lt;/span&gt;string&amp;quot;
echo&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$string&lt;/span&gt;

remove=&amp;quot;test&amp;quot;
short_string=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="c1"&gt;#$remove&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
echo&lt;span class="w"&gt; &lt;/span&gt;short_string
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that inside the &lt;code&gt;${}&lt;/code&gt; &lt;code&gt;string&lt;/code&gt; does not have a &lt;code&gt;$&lt;/code&gt;, it is implied.
The second half &lt;code&gt;$remove&lt;/code&gt; does require it. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://tldp.org/LDP/abs/html/string-manipulation.html"&gt;More info&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category><category term="Command Line"></category><category term="bash"></category></entry><entry><title>"Puy Lentil Wellington"</title><link href="http://lizard-spock.co.uk/pelican_test/puy-lentil-wellington.html" rel="alternate"></link><published>2014-03-04T18:24:42+00:00</published><updated>2014-03-04T18:24:42+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-04:/pelican_test/puy-lentil-wellington.html</id><summary type="html">&lt;p&gt;Based on a &lt;a href="http://uktv.co.uk/food/recipe/aid/516620"&gt;uktv recipe&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6871.jpg"&gt;&lt;/p&gt;
&lt;!-- more --&gt;

&lt;h2&gt;Ingredients&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;150&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;Puy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="n"&gt;tils&lt;/span&gt;
&lt;span class="mf"&gt;400&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ml&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Water&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;3&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="kr"&gt;On&lt;/span&gt;&lt;span class="n"&gt;ions&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tbsp&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Sugar …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Based on a &lt;a href="http://uktv.co.uk/food/recipe/aid/516620"&gt;uktv recipe&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6871.jpg"&gt;&lt;/p&gt;
&lt;!-- more --&gt;

&lt;h2&gt;Ingredients&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;150&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;Puy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="n"&gt;tils&lt;/span&gt;
&lt;span class="mf"&gt;400&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ml&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Water&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;3&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="kr"&gt;On&lt;/span&gt;&lt;span class="n"&gt;ions&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tbsp&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Sugar&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tbsp&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Olive&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;oil&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tbsp&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Rosemary&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tbsp&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Thyme&lt;/span&gt;
&lt;span class="mf"&gt;375&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;Puff&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pastry&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6852.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Finely dice onion and fry on low heat with olive oil, after a minute or two add
the sugar. Mean while simmer the lentils in water&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6853.jpg"&gt;
&lt;img alt="" src="/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6856.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Finely chop the Rosemary and Thyme, add to the onions. 
Mix well and keep on a low heat, stir occasionally to stop burning.
When onions are soft (about 15 minutes) take off heat and allow to cool.&lt;/p&gt;
&lt;p&gt;Mix Lentils and onions then place into a sheet of puff pastry then fold over to create the wellington, pinching ends together.&lt;/p&gt;
&lt;p&gt;Place in oven for 20-25 minutes.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6858.jpg"&gt;
&lt;img alt="" src="/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6864.jpg"&gt;
&lt;img alt="" src="/images/Cooking/PuyWellington/morganp-20140225-PuyLentil-IMG_6871.jpg"&gt;&lt;/p&gt;</content><category term="Cooking"></category><category term="Recipe"></category><category term="Put Lentil"></category><category term="Wellington"></category><category term="Rosemary"></category><category term="Thyme"></category><category term="Onion"></category><category term="Vegetarian"></category></entry><entry><title>"Octopress, Pages and Custom Domain"</title><link href="http://lizard-spock.co.uk/pelican_test/octopress-pages-and-custom-domain.html" rel="alternate"></link><published>2014-03-04T18:19:25+00:00</published><updated>2014-03-04T18:19:25+00:00</updated><author><name>morganp</name></author><id>tag:lizard-spock.co.uk,2014-03-04:/pelican_test/octopress-pages-and-custom-domain.html</id><summary type="html">&lt;p&gt;In your &lt;code&gt;sources&lt;/code&gt; branch, which is the main branch for writing creating posts, create a &lt;code&gt;CNAME&lt;/code&gt; file in the sources …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In your &lt;code&gt;sources&lt;/code&gt; branch, which is the main branch for writing creating posts, create a &lt;code&gt;CNAME&lt;/code&gt; file in the sources directory.&lt;/p&gt;
&lt;p&gt;vim source/CNAME&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;your-domain.co.uk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then check-in and deploy&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git add source/CNAME
rake deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Point your domain to github pages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;A record pointing to 204.232.175.78
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I also redirect www. to the non-www url&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;CNAME&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;record&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;www&lt;/span&gt;.&lt;span class="nv"&gt;example&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;example&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://octopress.org/docs/deploying/github/"&gt;Official Docs&lt;/a&gt;&lt;/p&gt;</content><category term="Tech"></category><category term="Octopress"></category><category term="Web"></category></entry></feed>